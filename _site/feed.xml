<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-06-01T02:40:34+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">나의 코딩 공부</title><subtitle>ethan의 블로그</subtitle><author><name>ethan</name></author><entry><title type="html">SQL injection 데이터 추출(3)</title><link href="http://localhost:4000/sql-injection/SQLinjection15/" rel="alternate" type="text/html" title="SQL injection 데이터 추출(3)" /><published>2024-06-01T00:00:00+09:00</published><updated>2024-06-01T00:00:00+09:00</updated><id>http://localhost:4000/sql-injection/SQLinjection15</id><content type="html" xml:base="http://localhost:4000/sql-injection/SQLinjection15/"><![CDATA[<p><br /></p>

<h1 id="1-sql-injection-데이터-추출3"><span style="background:#000000; color:#ffffff">1. SQL injection 데이터 추출(3)</span></h1>

<p><br /><span style="font-weight:bold; font-size:15px"> ※ 주의 사항 :</span></p>

<p><span style="font-weight:bold; font-size:15px">1. 교육 목적으로만 이용 해주세요.</span><br />
<span style="font-weight:bold; font-size:15px">2. 무단 침입, 데이터 유출, 개인 정보 침해 등 불법적인 활동은 심각한 법적 결과를 초래할 수 있습니다.</span><br />
<span style="font-weight:bold; font-size:15px">3.  개인적인 테스트 환경을 구축해서 실습하시길 바랍니다. </span></p>

<p><br /></p>

<h2 id="11-개요"><span style="background:#696969; color:#ffffff">1.1 개요 </span></h2>

<p><br /></p>

<p>저번 SQL injection 데이터 추출(2) 포스팅에서 DB데이터가 화면에 출력 될 때 SQL Injection을 해보았습니다.<br />
사실 데이터 추출 방식에는 3 가지 방식이 있습니다.</p>

<p><br /></p>

<p><span style="font-weight:bold; font-size:15px">1. SQL 질의 문 결과가 화면에 출력 되는 경우(데이터추출(2)) =&gt; UNION SQL (로그인 or 게시판 등)</span></p>

<p><span style="font-weight:bold; font-size:15px">2. 에러 메세지가 화면에 출력 되는 경우 =&gt; Error Based SQLi (에러 메세지 확인 가능 한 곳)</span></p>

<p><span style="font-weight:bold; font-size:15px">3. 참과 거짓으로 출력 되는 경우 =&gt; Blind SQL Injection (로그인 or 아이디 중복 체크 등)</span></p>

<p>와 같은 방식으로 해결할 수 있습니다.</p>

<p><br /></p>

<p>이번 포스팅에서는 2, 3 번을 배워보도록 합시다.</p>

<p><br /></p>

<h2 id="12-error-based-sql-injection에러-메세지를-출력하여-화면에서-볼-수-있을때"><span style="background:#696969; color:#ffffff">1.2  Error Based SQL Injection<span style="font-size:50%">(에러 메세지를 출력하여 화면에서 볼 수 있을때)</span></span></h2>

<p><br /></p>

<h3 id="121-필요한-개념">1.2.1 필요한 개념</h3>

<hr />

<p>Error Based SQl Injection은 무엇일까요?<br />
에러 메세지를 활용해서 데이터를 출력하는 방식입니다.</p>

<p>활용하기 위해서는 조건이 필요합니다.</p>

<pre><code class="language-mermaid">---
title : 〈조건〉
---
%%{init: {"flowchart": {"curve":"basis"}}}%%
flowchart LR 	
    C(SQL 에러)    
        C ---&gt; D[문법 에러]   
        C ---&gt; E[로직 에러]
classDef default fill:#ffd700,stroke:#ffff00;
</code></pre>

<p>먼저 SQL에러가 무엇일까요?<br />
SQL에러는 SQL쿼리에서 발생하는 에러를 뜻합니다.</p>

<p>그렇다면 문법 에러와 로직 에러가 어떤 점이 다른 지 살펴보겠습니다.</p>

<문법에러>



![image-20240601023835764](/images/2024-06-01-SQLinjection15/image-20240601023835764.png)

</문법에러>]]></content><author><name>ethan</name></author><category term="SQL-injection" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">5주차 SQL injection 인증우회 문제풀이(5)</title><link href="http://localhost:4000/sql-injection/SQLinjection9/" rel="alternate" type="text/html" title="5주차 SQL injection 인증우회 문제풀이(5)" /><published>2024-05-29T00:00:00+09:00</published><updated>2024-05-29T00:00:00+09:00</updated><id>http://localhost:4000/sql-injection/SQLinjection9</id><content type="html" xml:base="http://localhost:4000/sql-injection/SQLinjection9/"><![CDATA[<p><br /></p>

<h1 id="1-5주차-sql-injection-인증우회-문제풀이5"><span style="background:#000000; color:#ffffff">1. 5주차 SQL injection 인증우회 문제풀이(5)</span></h1>

<p><br /><span style="font-weight:bold; font-size:15px"> ※ 주의 사항 :</span></p>

<p><span style="font-weight:bold; font-size:15px">1. 교육 목적으로만 이용 해주세요.</span><br />
<span style="font-weight:bold; font-size:15px">2. 무단 침입, 데이터 유출, 개인 정보 침해 등 불법적인 활동은 심각한 법적 결과를 초래할 수 있습니다.</span><br />
<span style="font-weight:bold; font-size:15px">3.  개인적인 테스트 환경을 구축해서 실습하시길 바랍니다. </span></p>

<p><br /></p>

<h2 id="11-5번-문제"><span style="background:#696969; color:#ffffff">1.1  5번 문제</span></h2>

<p><br /></p>

<p><img src="/images/2024-05-29-SQLinjection9/1.PNG" alt="1" style="zoom:80%;" /></p>

<p><br /></p>

<p><span style="font-weight:bold; font-size:25px">▶ 목표 : normaltic1으로 로그인하기!!! </span></p>

<p><br /></p>

<h3 id="111-주어진-정보-확인하기"><span style="background:#A9A9A9; color:#ffffff">1.1.1 주어진 정보 확인하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-29-SQLinjection9/2.PNG" alt="2" style="zoom:67%;" /></p>

<p>doldol로 로그인 했을 때 데이터를 POST방식으로 보내네요.</p>

<p><img src="/images/2024-05-29-SQLinjection9/3.PNG" alt="3" style="zoom:60%;" /></p>

<p>살펴본 결과, 요청보내는 페이로드를의 sql injection을 시도해 봐야겠습니다. <br />
doldol’ and ‘1’=’1 시도 해본 결과, 302 Found로 리다이렉션이 되는 것 보니까 로그인에 성공합니다.<br />
따라서 sql injection로 로그인이 가능합니다.</p>

<p><img src="/images/2024-05-29-SQLinjection9/4.PNG" alt="4" style="zoom:60%;" /></p>

<p>만약 식별/인증이 분리라면 doldol’ or ‘1’=’1를 넣었을 시 참이 되는 아이디가 여러 개가 되므로 로그인이 되어서는 안됩니다.<br />
하지만 여기서는 302 Found로 로그인이 되었습니다. 따라서 식별/인증이 동시에 진행된 구조로 되어 있다고 할 수 있겠습니다.</p>

<h3 id="112-로그인하기"><br /><span style="background:#A9A9A9; color:#ffffff">1.1.2  로그인하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-29-SQLinjection9/5.PNG" alt="5" style="zoom:60%;" /></p>

<p>그렇다면 식별/인증 동시이므로 예를 들어) where id=’아이디’ and pass=’비밀번호 ‘ 일 확률이 있으므로<br />
로그인이 되는지 확인하기 위해서 뒤의 pass를 날려야 합니다. 그 방법이 doldol’ # 로 #가 뒤에 pass를 주석처리 해줍니다.<br />
따라서 해본 결과 로그인이 되네요.</p>

<p><br /></p>

<p><img src="/images/2024-05-29-SQLinjection9/6.PNG" alt="6" /></p>

<p>직접 normaltic1’ # 를 로그인 화면에 적은 결과 / 다음과 같이 flag가 출력됩니다.</p>]]></content><author><name>ethan</name></author><category term="SQL-injection" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">5주차 SQL injection 인증우회 문제풀이(4)</title><link href="http://localhost:4000/sql-injection/SQLinjection8/" rel="alternate" type="text/html" title="5주차 SQL injection 인증우회 문제풀이(4)" /><published>2024-05-29T00:00:00+09:00</published><updated>2024-05-29T00:00:00+09:00</updated><id>http://localhost:4000/sql-injection/SQLinjection8</id><content type="html" xml:base="http://localhost:4000/sql-injection/SQLinjection8/"><![CDATA[<p><br /></p>

<h1 id="1-5주차-sql-injection-인증우회-문제풀이4"><span style="background:#000000; color:#ffffff">1. 5주차 SQL injection 인증우회 문제풀이(4)</span></h1>

<p><br /><span style="font-weight:bold; font-size:15px"> ※ 주의 사항 :</span></p>

<p><span style="font-weight:bold; font-size:15px">1. 교육 목적으로만 이용 해주세요.</span><br />
<span style="font-weight:bold; font-size:15px">2. 무단 침입, 데이터 유출, 개인 정보 침해 등 불법적인 활동은 심각한 법적 결과를 초래할 수 있습니다.</span><br />
<span style="font-weight:bold; font-size:15px">3.  개인적인 테스트 환경을 구축해서 실습하시길 바랍니다. </span></p>

<p><br /></p>

<h2 id="11-4번-문제"><span style="background:#696969; color:#ffffff">1.1  4번 문제</span></h2>

<p><br /></p>

<p><img src="/images/2024-05-29-SQLinjection8/1.PNG" alt="1" style="zoom:80%;" /></p>

<p><img src="/images/2024-05-29-SQLinjection8/2.PNG" alt="2" style="zoom:67%;" /></p>

<p><br /></p>

<p><span style="font-weight:bold; font-size:25px">▶ 목표 : PIN Code 알아내기!!! </span></p>

<p><br /></p>

<h3 id="111-주어진-정보-확인하기"><span style="background:#A9A9A9; color:#ffffff">1.1.1 주어진 정보 확인하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-29-SQLinjection8/3.PNG" alt="3" style="zoom:67%;" /></p>

<p><img src="/images/2024-05-29-SQLinjection8/4.PNG" alt="4" style="zoom:60%;" /></p>

<p>비밀번호를 입력한 파일 요청한 응답을 보면 번호가 바뀐 url로 리다이렉션 하므로 번호를 알아야만 접속할 수 있습니다.<br />
하지만 틀려도 횟수 제한이 걸려 있지 않기 때문에 여러  번 시도 할 수 있는 것을 이용하여 intruder를 사용하면 될 듯 합니다.<br />
(Brute Force Attack)</p>

<p><br /></p>

<p><img src="/images/2024-05-29-SQLinjection8/5.PNG" alt="5" style="zoom:70%;" /></p>

<p><img src="/images/2024-05-29-SQLinjection8/6.PNG" alt="6" style="zoom:50%;" /></p>

<p><img src="/images/2024-05-29-SQLinjection8/7.PNG" alt="7" style="zoom: 67%;" /></p>

<p>그렇지만 확장 기능이 없으므로 특정 변화가 생기면 멈추지 않습니다. 일일이 수동으로 변화를 감지할 수도 없는 노릇이니<br />
다른 프로그램 언어로 서버로 요청하는 것이 좋을 것 같습니다.</p>

<h3 id="112-r-프로그램을-이용하여-서버로-요청하기brute-force-attack"><br /><span style="background:#A9A9A9; color:#ffffff">1.1.2  R 프로그램을 이용하여 서버로 요청하기<span style="font-size:80%">(Brute Force Attack)</span></span></h3>

<hr />

<p><br /></p>

<p>해당 방법을 이용하면 응답이 다를 때 중단되도록 만들었습니다.</p>

<div class="language-R highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">httr</span><span class="p">)</span><span class="w">

</span><span class="c1"># OTP 검증 함수 정의</span><span class="w">
</span><span class="n">check_otp</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">otp</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">base_url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"http://ctf.segfaulthub.com:1129/6/checkOTP.php"</span><span class="w">
  </span><span class="n">query_string</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sprintf</span><span class="p">(</span><span class="s2">"?otpNum=%s"</span><span class="p">,</span><span class="w"> </span><span class="n">otp</span><span class="p">)</span><span class="w">
  </span><span class="n">full_url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="n">base_url</span><span class="p">,</span><span class="w"> </span><span class="n">query_string</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># 서버로부터 응답 받기</span><span class="w">
  </span><span class="n">response</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">GET</span><span class="p">(</span><span class="n">full_url</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># 응답 내용에서 HTML을 추출</span><span class="w">
  </span><span class="n">response_content</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">content</span><span class="p">(</span><span class="n">response</span><span class="p">,</span><span class="w"> </span><span class="s2">"text"</span><span class="p">,</span><span class="w"> </span><span class="n">encoding</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"UTF-8"</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># 응답 내용의 첫 100자 출력</span><span class="w">
  </span><span class="n">cat</span><span class="p">(</span><span class="s2">"Testing OTP: "</span><span class="p">,</span><span class="w"> </span><span class="n">otp</span><span class="p">,</span><span class="w"> </span><span class="s2">"\nResponse Content: "</span><span class="p">,</span><span class="w"> </span><span class="n">substr</span><span class="p">(</span><span class="n">response_content</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="m">100</span><span class="p">),</span><span class="w"> </span><span class="s2">"\n"</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># 응답 내용 반환</span><span class="w">
  </span><span class="nf">return</span><span class="p">(</span><span class="n">response_content</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="c1"># 초기 응답 저장</span><span class="w">
</span><span class="n">initial_response</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">check_otp</span><span class="p">(</span><span class="s2">"0000"</span><span class="p">)</span><span class="w">

</span><span class="c1"># 모든 OTP 검증</span><span class="w">
</span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">9999</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">otp</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sprintf</span><span class="p">(</span><span class="s2">"%04d"</span><span class="p">,</span><span class="w"> </span><span class="n">i</span><span class="p">)</span><span class="w">
  </span><span class="n">current_response</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">check_otp</span><span class="p">(</span><span class="n">otp</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># 현재 응답과 초기 응답 비교</span><span class="w">
  </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">current_response</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="n">initial_response</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">cat</span><span class="p">(</span><span class="s2">"Response changed at OTP: "</span><span class="p">,</span><span class="w"> </span><span class="n">otp</span><span class="p">,</span><span class="w"> </span><span class="s2">"\n"</span><span class="p">)</span><span class="w">
    </span><span class="k">break</span><span class="w">  </span><span class="c1"># 응답이 변경되었을 때 루프 중단</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p><img src="/images/2024-05-29-SQLinjection8/8.PNG" alt="8" style="zoom:50%;" /></p>

<p><img src="/images/2024-05-29-SQLinjection8/9.PNG" alt="9" style="zoom:50%;" /></p>]]></content><author><name>ethan</name></author><category term="SQL-injection" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">5주차 SQL injection 인증우회 문제풀이(3)</title><link href="http://localhost:4000/sql-injection/SQLinjection7/" rel="alternate" type="text/html" title="5주차 SQL injection 인증우회 문제풀이(3)" /><published>2024-05-29T00:00:00+09:00</published><updated>2024-05-29T00:00:00+09:00</updated><id>http://localhost:4000/sql-injection/SQLinjection7</id><content type="html" xml:base="http://localhost:4000/sql-injection/SQLinjection7/"><![CDATA[<p><br /></p>

<h1 id="1-5주차-sql-injection-인증우회-문제풀이3"><span style="background:#000000; color:#ffffff">1. 5주차 SQL injection 인증우회 문제풀이(3)</span></h1>

<p><br /><span style="font-weight:bold; font-size:15px"> ※ 주의 사항 :</span></p>

<p><span style="font-weight:bold; font-size:15px">1. 교육 목적으로만 이용 해주세요.</span><br />
<span style="font-weight:bold; font-size:15px">2. 무단 침입, 데이터 유출, 개인 정보 침해 등 불법적인 활동은 심각한 법적 결과를 초래할 수 있습니다.</span><br />
<span style="font-weight:bold; font-size:15px">3.  개인적인 테스트 환경을 구축해서 실습하시길 바랍니다. </span></p>

<p><br /></p>

<h2 id="11-3번-문제"><span style="background:#696969; color:#ffffff">1.1  3번 문제</span></h2>

<p><br /></p>

<p><img src="/images/2024-05-29-SQLinjection7/1.PNG" alt="1" style="zoom: 80%;" /></p>

<p><br /></p>

<p><span style="font-weight:bold; font-size:25px">▶ 목표 : admin계정으로 로그인하기!!! </span></p>

<p><br /></p>

<h3 id="111-주어진-정보-확인하기"><span style="background:#A9A9A9; color:#ffffff">1.1.1 주어진 정보 확인하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-29-SQLinjection7/2.PNG" alt="2" style="zoom:80%;" /></p>

<p>doldol로 로그인이 되는지 확인하였다.</p>

<p><img src="/images/2024-05-29-SQLinjection7/3.PNG" alt="3" style="zoom:60%;" /></p>

<h3 id="112-서버로-보내는-데이터-확인하기"><br /><span style="background:#A9A9A9; color:#ffffff">1.1.2  서버로 보내는 데이터 확인하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-29-SQLinjection7/5-1716921469490-37.PNG" alt="5" style="zoom:60%;" /></p>

<p><img src="/images/2024-05-29-SQLinjection7/6-1716921473008-39.PNG" alt="6" style="zoom:60%;" /></p>

<p>userid가 doldol 일 때는 result가 ok 이고, userid가 admin일 때는 result 가 fail 이 나왔습니다.</p>

<p><br /></p>

<p><img src="/images/2024-05-29-SQLinjection7/7-1716921475786-41.PNG" alt="7" style="zoom:60%;" /></p>

<p>그러나 Userpw를 지운 결과 flag가 나왔지만 이거 거의 운빨로 때려 맞춘 거나 다름없었습니다.</p>

<h3 id="113-json-파일의-response-조작하기"><br /><span style="background:#A9A9A9; color:#ffffff">1.1.3  JSON 파일의 response 조작하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-29-SQLinjection7/image-20240529034556725.png" alt="image-20240529034556725" style="zoom:80%;" /></p>

<p>자세히 보니 파일이 json입니다. json(JavaScript Object Notation)은 간단한 텍스트 기반 데이터 포맷입니다.</p>

<p><br /></p>

<p>아까와 같은 방식이 아닌 json 파일의 response  result값의 텍스트를 조작해서 푸는 것이 의도가 맞습니다.</p>

<p><img src="/images/2024-05-29-SQLinjection7/image-20240529034624922.png" alt="image-20240529034624922" style="zoom:60%;" /></p>

<p>그렇기 때문에 설정에서 response interception rules를 다음과 같이 설정해야 합니다.</p>

<p><img src="/images/2024-05-29-SQLinjection7/image-20240529034733527.png" alt="image-20240529034733527" style="zoom:60%;" /></p>

<p><br /></p>

<p><img src="/images/2024-05-29-SQLinjection7/image-20240529034751178.png" alt="image-20240529034751178" style="zoom:67%;" /></p>

<p><img src="/images/2024-05-29-SQLinjection7/image-20240529034808943.png" alt="image-20240529034808943" style="zoom: 67%;" /></p>

<p>fail 값을 ok값으로 바꿉니다. 왜냐하면 로그인이 정상적으로 되었을 때가 ok라는 결과를 출력했기 때문입니다.<br />
그리고 foward 누르고 보냅니다.</p>

<p><br /></p>

<p><img src="/images/2024-05-29-SQLinjection7/image-20240529034836762.png" alt="image-20240529034836762" style="zoom:60%;" /></p>

<p>그러면 이어서 index.php를 서버로 요청하면,</p>

<p><img src="/images/2024-05-29-SQLinjection7/image-20240529034905159.png" alt="image-20240529034905159" style="zoom:67%;" /></p>

<p>바로 flag가 출력 되는 것을 볼 수 있습니다.</p>]]></content><author><name>ethan</name></author><category term="SQL-injection" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">5주차 SQL injection 인증우회 문제풀이(2)</title><link href="http://localhost:4000/sql-injection/SQLinjection6/" rel="alternate" type="text/html" title="5주차 SQL injection 인증우회 문제풀이(2)" /><published>2024-05-29T00:00:00+09:00</published><updated>2024-05-29T00:00:00+09:00</updated><id>http://localhost:4000/sql-injection/SQLinjection6</id><content type="html" xml:base="http://localhost:4000/sql-injection/SQLinjection6/"><![CDATA[<p><br /></p>

<h1 id="1-5주차-sql-injection-인증우회-문제풀이2"><span style="background:#000000; color:#ffffff">1. 5주차 SQL injection 인증우회 문제풀이(2)</span></h1>

<p><br /><span style="font-weight:bold; font-size:15px"> ※ 주의 사항 :</span></p>

<p><span style="font-weight:bold; font-size:15px">1. 교육 목적으로만 이용 해주세요.</span><br />
<span style="font-weight:bold; font-size:15px">2. 무단 침입, 데이터 유출, 개인 정보 침해 등 불법적인 활동은 심각한 법적 결과를 초래할 수 있습니다.</span><br />
<span style="font-weight:bold; font-size:15px">3.  개인적인 테스트 환경을 구축해서 실습하시길 바랍니다. </span></p>

<p><br /></p>

<h2 id="11-2번-문제"><span style="background:#696969; color:#ffffff">1.1  2번 문제</span></h2>

<p><br /></p>

<p><img src="/images/2024-05-29-SQLinjection6/1.PNG" alt="1" style="zoom:80%;" /></p>

<p><br /></p>

<p><span style="font-weight:bold; font-size:25px">▶ 목표 : 관리자 인증 우회하기!!! </span></p>

<p><br /></p>

<h3 id="111-주어진-정보-확인하기"><span style="background:#A9A9A9; color:#ffffff">1.1.1 주어진 정보 확인하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-29-SQLinjection6/2.PNG" alt="2" style="zoom:67%;" /></p>

<p><img src="/images/2024-05-29-SQLinjection6/3.PNG" alt="3" style="zoom: 80%;" /></p>

<p>burp suite에서 확인한 결과 처음 화면에서 확인을 누르고 들어가다 보면 이렇게 진행됩니다.</p>

<p>/3/ ▶ /3/step1.php ▶ /3/step2.php ▶ /3/step2.php?admin_pass=[비밀번호 자리]</p>

<p>전부 GET 방식으로 서버에 보내는 형식이네요.</p>

<p>별다른 단서는 없는 것 같습니다.</p>

<h3 id="112-서버로-보내는-데이터-확인하기"><br /><span style="background:#A9A9A9; color:#ffffff">1.1.2  서버로 보내는 데이터 확인하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-29-SQLinjection6/4-1716918068510-26.PNG" alt="4" style="zoom:60%;" /></p>

<p>정보가 제한적 이므로 비밀번호를 직접 알지 못하는 이상 우회하기는 힘들 것 같습니다. <br />
하지만 파일이름이  step1 ▶ step2 이런 식으로 진입하는 것을 보니  step3도 확인해보는 것이 좋을 것 같습니다.<br />
그래서 GET방식이라서 /3/step3.php로 파일을 요청했습니다. 그랬더니 gogoHack.php로 리다이렉트되는 것이 확인됩니다.</p>

<p><br /></p>

<p><img src="/images/2024-05-29-SQLinjection6/5-1716918144412-28.PNG" alt="5" style="zoom:60%;" /></p>

<p>따라서 /3/gogoHack.php로 파일을 요청했습니다. 반응 값으로 경고문에 flag가 담겨서 있는 것을 확인할 수 있었습니다.</p>]]></content><author><name>ethan</name></author><category term="SQL-injection" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">5주차 SQL injection 인증우회 문제풀이(1)</title><link href="http://localhost:4000/sql-injection/SQLinjection5/" rel="alternate" type="text/html" title="5주차 SQL injection 인증우회 문제풀이(1)" /><published>2024-05-29T00:00:00+09:00</published><updated>2024-05-29T00:00:00+09:00</updated><id>http://localhost:4000/sql-injection/SQLinjection5</id><content type="html" xml:base="http://localhost:4000/sql-injection/SQLinjection5/"><![CDATA[<p><br /></p>

<h1 id="1-5주차-sql-injection-인증우회-문제풀이1"><span style="background:#000000; color:#ffffff">1. 5주차 SQL injection 인증우회 문제풀이(1)</span></h1>

<p><br /><span style="font-weight:bold; font-size:15px"> ※ 주의 사항 :</span></p>

<p><span style="font-weight:bold; font-size:15px">1. 교육 목적으로만 이용 해주세요.</span><br />
<span style="font-weight:bold; font-size:15px">2. 무단 침입, 데이터 유출, 개인 정보 침해 등 불법적인 활동은 심각한 법적 결과를 초래할 수 있습니다.</span><br />
<span style="font-weight:bold; font-size:15px">3.  개인적인 테스트 환경을 구축해서 실습하시길 바랍니다. </span></p>

<p><br /></p>

<h2 id="11-1번-문제"><span style="background:#696969; color:#ffffff">1.1  1번 문제</span></h2>

<p><br /></p>

<p><img src="/images/2024-05-29-SQLinjection5/1.PNG" alt="1" style="zoom:80%;" /></p>

<p><br /></p>

<p><span style="font-weight:bold; font-size:25px">▶ 목표 : doldol 계정이 아닌 admin 계정으로 접속하기!!! </span></p>

<p><br /></p>

<h3 id="111-주어진-정보-dodol-로-로그인-직접-해보기"><span style="background:#A9A9A9; color:#ffffff">1.1.1 주어진 정보 dodol 로 로그인 직접 해보기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-29-SQLinjection5/2.PNG" alt="2" /></p>

<p><img src="/images/2024-05-29-SQLinjection5/3.PNG" alt="3" style="zoom:67%;" /></p>

<p>직접 해보니 doldol로 로그인이 가능하다는 사실을 알 수 있었고, burp suite 으로 확인한 결과 로그인 할 때 POST 방식으로 데이터를 <br />
서버로 전송하고 있네요.</p>

<h3 id="112-서버로-보내는-데이터-확인하기"><br /><span style="background:#A9A9A9; color:#ffffff">1.1.2  서버로 보내는 데이터 확인하기</span></h3>

<hr />

<p><br /></p>

<p><span style="font-weight:bold; font-size:20px"><login.php>&lt;/span&gt;</login.php></span></p>

<p><img src="/images/2024-05-29-SQLinjection5/4-1716914699805-15.PNG" alt="4" style="zoom: 60%;" /></p>

<p>doldol로 로그인 할 때 쿠키 형식으로 보내서 set-cookie 가 나타났습니다.</p>

<p><br /></p>

<p><span style="font-weight:bold; font-size:20px"><index.php>&lt;/span&gt;</index.php></span></p>

<p><img src="/images/2024-05-29-SQLinjection5/5-1716914786884-17.PNG" alt="5" style="zoom: 60%;" /></p>

<p>그래서 로그인 된 화면은 쿠키가 있는 것으로 확인 되네요. 쿠키는 로그인이 될 수 있게 도움을 줍니다<br />
하지만 클라이언트 측에서 정보를 조작할 수 있다는 치명적인 단점이 있습니다. <br />
이것을 이용해서 저희가 접속해야 할 admin 계정으로 조작해봅시다.</p>

<h3 id="113-cookie-정보-조작하기"><br /><span style="background:#A9A9A9; color:#ffffff">1.1.3  Cookie 정보 조작하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-29-SQLinjection5/6-1716914942595-19.PNG" alt="6" style="zoom:60%;" /></p>

<p>cookie의 doldol를 admin으로 조작하고, 서버의 반응 값을 보니 flag가 나타나네요.</p>]]></content><author><name>ethan</name></author><category term="SQL-injection" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">5주차 SQL injection 인증우회 문제풀이(10)</title><link href="http://localhost:4000/sql-injection/SQLinjection14/" rel="alternate" type="text/html" title="5주차 SQL injection 인증우회 문제풀이(10)" /><published>2024-05-29T00:00:00+09:00</published><updated>2024-05-29T00:00:00+09:00</updated><id>http://localhost:4000/sql-injection/SQLinjection14</id><content type="html" xml:base="http://localhost:4000/sql-injection/SQLinjection14/"><![CDATA[<p><br /></p>

<h1 id="1-5주차-sql-injection-인증우회-문제풀이10"><span style="background:#000000; color:#ffffff">1. 5주차 SQL injection 인증우회 문제풀이(10)</span></h1>

<p><br /><span style="font-weight:bold; font-size:15px"> ※ 주의 사항 :</span></p>

<p><span style="font-weight:bold; font-size:15px">1. 교육 목적으로만 이용 해주세요.</span><br />
<span style="font-weight:bold; font-size:15px">2. 무단 침입, 데이터 유출, 개인 정보 침해 등 불법적인 활동은 심각한 법적 결과를 초래할 수 있습니다.</span><br />
<span style="font-weight:bold; font-size:15px">3.  개인적인 테스트 환경을 구축해서 실습하시길 바랍니다. </span></p>

<p><br /></p>

<h2 id="11-10번-문제"><span style="background:#696969; color:#ffffff">1.1  10번 문제</span></h2>

<p><br /><img src="/images/2024-05-29-SQLinjection14/1.PNG" alt="1" /></p>

<p><img src="/images/2024-05-29-SQLinjection14/2.PNG" alt="2" /></p>

<p><img src="/images/2024-05-29-SQLinjection14/3.PNG" alt="3" /></p>

<p><img src="/images/2024-05-29-SQLinjection14/4.PNG" alt="4" /></p>

<p><img src="/images/2024-05-29-SQLinjection14/5.PNG" alt="5" /></p>

<p><img src="/images/2024-05-29-SQLinjection14/6.PNG" alt="6" /></p>

<p><img src="/images/2024-05-29-SQLinjection14/8.PNG" alt="8" /><img src="/images/2024-05-29-SQLinjection14/7.PNG" alt="7" /></p>

<p><img src="/images/2024-05-29-SQLinjection14/9.PNG" alt="9" /></p>

<p><img src="/images/2024-05-29-SQLinjection14/10.PNG" alt="10" /></p>

<p><img src="/images/2024-05-29-SQLinjection14/11.PNG" alt="11" /></p>

<p><img src="/images/2024-05-29-SQLinjection14/12.PNG" alt="12" /></p>

<p><img src="/images/2024-05-29-SQLinjection14/13.PNG" alt="13" /></p>

<p><img src="/images/2024-05-29-SQLinjection14/14.PNG" alt="14" /></p>

<p><img src="/images/2024-05-29-SQLinjection14/15.PNG" alt="15" /></p>]]></content><author><name>ethan</name></author><category term="SQL-injection" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">5주차 SQL injection 인증우회 문제풀이(9)</title><link href="http://localhost:4000/sql-injection/SQLinjection13/" rel="alternate" type="text/html" title="5주차 SQL injection 인증우회 문제풀이(9)" /><published>2024-05-29T00:00:00+09:00</published><updated>2024-05-29T00:00:00+09:00</updated><id>http://localhost:4000/sql-injection/SQLinjection13</id><content type="html" xml:base="http://localhost:4000/sql-injection/SQLinjection13/"><![CDATA[<p><br /></p>

<h1 id="1-5주차-sql-injection-인증우회-문제풀이9"><span style="background:#000000; color:#ffffff">1. 5주차 SQL injection 인증우회 문제풀이(9)</span></h1>

<p><br /><span style="font-weight:bold; font-size:15px"> ※ 주의 사항 :</span></p>

<p><span style="font-weight:bold; font-size:15px">1. 교육 목적으로만 이용 해주세요.</span><br />
<span style="font-weight:bold; font-size:15px">2. 무단 침입, 데이터 유출, 개인 정보 침해 등 불법적인 활동은 심각한 법적 결과를 초래할 수 있습니다.</span><br />
<span style="font-weight:bold; font-size:15px">3.  개인적인 테스트 환경을 구축해서 실습하시길 바랍니다. </span></p>

<p><br /></p>

<h2 id="11-9번-문제"><span style="background:#696969; color:#ffffff">1.1  9번 문제</span></h2>

<p><br /><img src="/images/2024-05-29-SQLinjection13/1.PNG" alt="1" /></p>

<p><img src="/images/2024-05-29-SQLinjection13/2.PNG" alt="2" /></p>

<p><img src="/images/2024-05-29-SQLinjection13/3.PNG" alt="3" /></p>

<p><img src="/images/2024-05-29-SQLinjection13/4.PNG" alt="4" /></p>]]></content><author><name>ethan</name></author><category term="SQL-injection" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">5주차 SQL injection 인증우회 문제풀이(8)</title><link href="http://localhost:4000/sql-injection/SQLinjection12/" rel="alternate" type="text/html" title="5주차 SQL injection 인증우회 문제풀이(8)" /><published>2024-05-29T00:00:00+09:00</published><updated>2024-05-29T00:00:00+09:00</updated><id>http://localhost:4000/sql-injection/SQLinjection12</id><content type="html" xml:base="http://localhost:4000/sql-injection/SQLinjection12/"><![CDATA[<p><br /></p>

<h1 id="1-5주차-sql-injection-인증우회-문제풀이8"><span style="background:#000000; color:#ffffff">1. 5주차 SQL injection 인증우회 문제풀이(8)</span></h1>

<p><br /><span style="font-weight:bold; font-size:15px"> ※ 주의 사항 :</span></p>

<p><span style="font-weight:bold; font-size:15px">1. 교육 목적으로만 이용 해주세요.</span><br />
<span style="font-weight:bold; font-size:15px">2. 무단 침입, 데이터 유출, 개인 정보 침해 등 불법적인 활동은 심각한 법적 결과를 초래할 수 있습니다.</span><br />
<span style="font-weight:bold; font-size:15px">3.  개인적인 테스트 환경을 구축해서 실습하시길 바랍니다. </span></p>

<p><br /></p>

<h2 id="11-8번-문제"><span style="background:#696969; color:#ffffff">1.1  8번 문제</span></h2>

<p><br /></p>

<p><img src="/images/2024-05-29-SQLinjection12/1.PNG" alt="1" /></p>

<p><img src="/images/2024-05-29-SQLinjection12/2.PNG" alt="2" /></p>

<p><img src="/images/2024-05-29-SQLinjection12/3.PNG" alt="3" /></p>

<p><img src="/images/2024-05-29-SQLinjection12/4.PNG" alt="4" /></p>

<p><img src="/images/2024-05-29-SQLinjection12/5.PNG" alt="5" /></p>]]></content><author><name>ethan</name></author><category term="SQL-injection" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">5주차 SQL injection 인증우회 문제풀이(7)</title><link href="http://localhost:4000/sql-injection/SQLinjection11/" rel="alternate" type="text/html" title="5주차 SQL injection 인증우회 문제풀이(7)" /><published>2024-05-29T00:00:00+09:00</published><updated>2024-05-29T00:00:00+09:00</updated><id>http://localhost:4000/sql-injection/SQLinjection11</id><content type="html" xml:base="http://localhost:4000/sql-injection/SQLinjection11/"><![CDATA[<p><br /></p>

<h1 id="1-5주차-sql-injection-인증우회-문제풀이7"><span style="background:#000000; color:#ffffff">1. 5주차 SQL injection 인증우회 문제풀이(7)</span></h1>

<p><br /><span style="font-weight:bold; font-size:15px"> ※ 주의 사항 :</span></p>

<p><span style="font-weight:bold; font-size:15px">1. 교육 목적으로만 이용 해주세요.</span><br />
<span style="font-weight:bold; font-size:15px">2. 무단 침입, 데이터 유출, 개인 정보 침해 등 불법적인 활동은 심각한 법적 결과를 초래할 수 있습니다.</span><br />
<span style="font-weight:bold; font-size:15px">3.  개인적인 테스트 환경을 구축해서 실습하시길 바랍니다. </span></p>

<p><br /></p>

<h2 id="11-7번-문제"><span style="background:#696969; color:#ffffff">1.1  7번 문제</span></h2>

<p><br /><img src="/images/2024-05-29-SQLinjection11/1.PNG" alt="1" /></p>

<p><img src="/images/2024-05-29-SQLinjection11/2.PNG" alt="2" /></p>

<p><img src="/images/2024-05-29-SQLinjection11/3.PNG" alt="3" /></p>

<p><img src="/images/2024-05-29-SQLinjection11/4.PNG" alt="4" /></p>

<p><img src="/images/2024-05-29-SQLinjection11/5.PNG" alt="5" /></p>

<p><img src="/images/2024-05-29-SQLinjection11/6.PNG" alt="6" /></p>

<p><img src="/images/2024-05-29-SQLinjection11/7.PNG" alt="7" /></p>]]></content><author><name>ethan</name></author><category term="SQL-injection" /><summary type="html"><![CDATA[]]></summary></entry></feed>